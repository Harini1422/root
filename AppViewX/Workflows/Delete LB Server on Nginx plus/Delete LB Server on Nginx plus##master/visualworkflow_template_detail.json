[ {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "script_1",
        "taskName" : null,
        "subflowId" : "uLuRsG9J",
        "parentSubflowId" : "",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "Get Inputs to create Nginx  LB server with health check,persistence,ssl certificate etc..",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "workflow_start_1",
        "taskName" : null,
        "subflowId" : "uLuRsG9J",
        "parentSubflowId" : "",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "script_1",
        "taskName" : null,
        "subflowId" : "uLuRsG9J",
        "parentSubflowId" : "",
        "taskType" : "script",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "ADC Create Nginx LB",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "dynamicAuth" : null,
    "regexList" : null,
    "regexOperation" : null,
    "regexPattern" : null,
    "accessMode" : null,
    "proceedProcess" : "Submit",
    "breakdownProcess" : "Back",
    "cancelProcess" : "Cancel",
    "saveDraftProcess" : "Save Draft",
    "closeProcess" : "Exit",
    "enableSaveDraft" : false,
    "enableCancel" : true,
    "enableClose" : false,
    "enableAutoApprove" : null,
    "enableBreakDown" : false,
    "availableGlobalData" : null,
    "_id" : null,
    "task_id" : "createform_1",
    "task_name" : "ADC Create Nginx LB",
    "task_type" : "form",
    "task_category" : "form",
    "component_type" : "form",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "form",
    "group_name" : "User interface",
    "viewable_type" : "default",
    "aclIdentifiers" : null,
    "template" : {
      "name" : "ADC Create Nginx LB",
      "description" : null,
      "aclIdentifiers" : null,
      "fields" : [ {
        "labelName" : "Device Name",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "device_name",
        "fieldScript" : "Get Nginx Devices",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : true,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Nginx Path",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "conf_file",
        "fieldScript" : "Get Conf files",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : true,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Load Balancing Type",
        "elementType" : "Radio button",
        "values" : "TCP,HTTP",
        "fieldId" : "lb_type",
        "fieldScript" : "Get Listener IP",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : true,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "LB server IP",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "listener_ip",
        "fieldScript" : "Get Listener Port",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : true,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "LB server Port",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "listener_port",
        "fieldScript" : "",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : false,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      }, {
        "labelName" : "Upstream Server Name",
        "elementType" : "Dropdown",
        "values" : "",
        "fieldId" : "upstream_name",
        "fieldScript" : "Get Up Streams",
        "aclFilter" : "None",
        "dependsOn" : "",
        "dataValidation" : "",
        "parent" : "",
        "help" : "",
        "mandatory" : true,
        "predefinedRegex" : false,
        "notification" : null,
        "accessType" : "RW",
        "view" : "advanced",
        "permission" : "submit",
        "group" : "",
        "autoTrigger" : true,
        "global" : true,
        "fileName" : "",
        "downloadType" : null
      } ],
      "fieldScripts" : [ {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Cancel request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Discard request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ ],
        "responseMapping" : null,
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Submit request",
        "scriptData" : "",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "queryExplorer",
        "fieldIds" : [ "device_name" ],
        "responseMapping" : {
          "response" : {
            "device_name" : "name"
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "queryBuilderName" : "Get Nginx Devices",
        "category" : "General",
        "queryBuilderDescription" : null,
        "filters" : {
          "rules" : [ {
            "field" : "status",
            "dataType" : "String",
            "value" : "Managed",
            "operation" : "equal",
            "rules" : null,
            "aggregation" : null
          }, {
            "field" : "vendor",
            "dataType" : "String",
            "value" : "NginxPlus",
            "operation" : "equal",
            "rules" : null,
            "aggregation" : null
          } ],
          "aggregation" : "AND"
        },
        "module" : "Device Inventory",
        "projectionFields" : [ "name" ],
        "sorts" : null,
        "pagination" : null,
        "count" : false,
        "customFieldOOB" : false,
        "distinct" : null,
        "queryExplorerLocation" : null,
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "conf_file" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Get Conf files",
        "scriptData" : "c3lzLnBhdGguYXBwZW5kKEFWWDo6REVQRU5ERU5DSUVTKQpzeXMucGF0aC5hcHBlbmQoQVZYOjpIRUxQRVIpCgppbXBvcnQgYXBwdmlld3gKaW1wb3J0IGpzb24KCnRyeToKICAgIGRldmljZV9uYW1lID0gJzxkZXZpY2VfbmFtZT4nCiAgICBjb25uZWN0X2RiID0gYXBwdmlld3guZGJfY29ubmVjdGlvbigpCiAgICBkZXZpY2VfZGIgPSBjb25uZWN0X2RiLmFwcHZpZXd4LmRldmljZQogICAgZGV2aWNlX2RhdGEgPSBbeCBmb3IgeCBpbiBkZXZpY2VfZGIuZmluZCh7Im5hbWUiOmRldmljZV9uYW1lfSldWzBdCgogICAgb3V0cHV0X2xpc3Q9W10KCiAgICBmb3IgZWFjaCBpbiBkZXZpY2VfZGF0YVsiYXR0cmlidXRlcyJdWyJjb25maWdGaWxlUGF0aHMiXToKICAgICAgICBvdXRwdXRfbGlzdC5hcHBlbmQoeyJjb25mX2ZpbGUiOmVhY2h9KQogICAgaWYgbGVuKG91dHB1dF9saXN0KSA+IDA6CiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyhvdXRwdXRfbGlzdCkpCiAgICBlbHNlOgogICAgICAgIHByaW50KGpzb24uZHVtcHMoW3siY29uZl9maWxlIjogIk5vIENvbmYgZmlsZSBwYXRocyBGb3VuZCJ9XSkpCgpleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICBwcmludCgiRmFpbGVkIHRvIEZldGNoIENvbmYgZmlsZSBwYXRocyBmcm9tIERCIitzdHIoZSkp",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "upstream_name" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Get Up Streams",
        "scriptData" : "c3lzLnBhdGguYXBwZW5kKEFWWDo6REVQRU5ERU5DSUVTKQpzeXMucGF0aC5hcHBlbmQoQVZYOjpIRUxQRVIpCgppbXBvcnQgYXBwdmlld3gKaW1wb3J0IGpzb24KCnRyeToKICAgIGRldmljZV9uYW1lID0gJzxkZXZpY2VfbmFtZT4nCiAgICBsYl90eXBlID0gJzxsYl90eXBlPicubG93ZXIoKSBpZiAnPGxiX3R5cGU+Jy5sb3dlcigpID09ICJodHRwIiBlbHNlICJzdHJlYW0iCiAgICBsaXN0ZW5lcl9pcCA9ICc8bGlzdGVuZXJfaXA+JwogICAgbGlzdGVuZXJfcG9ydCA9ICc8bGlzdGVuZXJfcG9ydD4nCiAgICBjb25uZWN0X2RiID0gYXBwdmlld3guZGJfY29ubmVjdGlvbigpCiAgICBkZXZpY2VfZGIgPSBjb25uZWN0X2RiLmFwcHZpZXd4LmRldmljZQogICAgbWVfYWRjID0gY29ubmVjdF9kYi5hcHB2aWV3eC5tZV9hZGMKCiAgICBkZXZpY2VfZGF0YSA9IFt4IGZvciB4IGluIGRldmljZV9kYi5maW5kKHsibmFtZSI6ZGV2aWNlX25hbWV9KSBdWzBdCiAgICBkZXZpY2VfaWQgPSBzdHIoZGV2aWNlX2RhdGFbIl9pZCJdKQoKICAgIGZvciBlYWNoIGluIG1lX2FkYy5maW5kKHsiZGV2aWNlSWQiOmRldmljZV9pZCwidHJhZmZpY1R5cGUiOmxiX3R5cGUsImlwIjpsaXN0ZW5lcl9pcCwicG9ydCI6bGlzdGVuZXJfcG9ydCwiY29kZSIgOiAibnNlcnZlciJ9KToKICAgICAgICBpZiAibmFtZSIgaW4gZWFjaDogCiAgICAgICAgICAgIHBhcmVudF9uYW1lID0gZWFjaFsibmFtZSJdCiAgICBmb3IgZWFjaCBpbiBtZV9hZGMuZmluZCh7ImRldmljZUlkIjpkZXZpY2VfaWQsInRyYWZmaWNUeXBlIjpsYl90eXBlLCJjb2RlIiA6ICJudXBzdHJlYW0iLCJwYXJlbnQiOnsiJGluIjpbcGFyZW50X25hbWVdfX0pOgogICAgICAgIGlmICJuYW1lIiBpbiBlYWNoOiAKICAgICAgICAgICAgb3V0cHV0ID0geyJ1cHN0cmVhbV9uYW1lIjplYWNoWyJuYW1lIl19CiAgICAgICAgICAgIGJyZWFrCiAgCiAgICBpZiBsZW4ob3V0cHV0KSA+IDA6CiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyhbb3V0cHV0XSkpCiAgICBlbHNlOgogICAgICAgIHByaW50KGpzb24uZHVtcHMoW3sidXBzdHJlYW1fbmFtZSI6ICJObyB1cHN0cmVhbSBuYW1lIEZvdW5kIn1dKSkKCmV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgIHByaW50KCJGYWlsZWQgdG8gRmV0Y2ggdXBzdHJlYW0gbmFtZSBmcm9tIERCIitzdHIoZSkp",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "lb_type" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Get Listener IP",
        "scriptData" : "c3lzLnBhdGguYXBwZW5kKEFWWDo6REVQRU5ERU5DSUVTKQpzeXMucGF0aC5hcHBlbmQoQVZYOjpIRUxQRVIpCgppbXBvcnQgYXBwdmlld3gKaW1wb3J0IGpzb24sc3lzCgp0cnk6CiAgICBkZXZpY2VfbmFtZSA9ICc8ZGV2aWNlX25hbWU+JwogICAgbGJfdHlwZSA9ICc8bGJfdHlwZT4nLmxvd2VyKCkgaWYgJzxsYl90eXBlPicubG93ZXIoKSA9PSAiaHR0cCIgZWxzZSAic3RyZWFtIgogICAgZmlsZV9wYXRoID0gJzxjb25mX2ZpbGU+JwogICAgY29ubmVjdF9kYiA9IGFwcHZpZXd4LmRiX2Nvbm5lY3Rpb24oKQogICAgZGV2aWNlX2RiID0gY29ubmVjdF9kYi5hcHB2aWV3eC5kZXZpY2UKICAgIG1lX2FkYyA9IGNvbm5lY3RfZGIuYXBwdmlld3gubWVfYWRjCgogICAgZGV2aWNlX2RhdGEgPSBbeCBmb3IgeCBpbiBkZXZpY2VfZGIuZmluZCh7Im5hbWUiOmRldmljZV9uYW1lfSldWzBdCiAgICBkZXZpY2VfaWQgPSBzdHIoZGV2aWNlX2RhdGFbIl9pZCJdKQoKICAgIG91dHB1dF9saXN0PVtdCiAgICBmb3IgZWFjaCBpbiBtZV9hZGMuZmluZCh7ImRldmljZUlkIjpkZXZpY2VfaWQsInRyYWZmaWNUeXBlIjpsYl90eXBlLCJmaWxlUGF0aCIgOiBmaWxlX3BhdGgsImNvZGUiIDogIm5zZXJ2ZXIifSk6CiAgICAgICAgaWYgImlwIiBpbiBlYWNoOiAKICAgICAgICAgICAgb3V0cHV0X2xpc3QuYXBwZW5kKHsibGlzdGVuZXJfaXAiOmVhY2hbImlwIl19KQoKICAgIG91dHB1dCAgPSBbZGljdCh0KSBmb3IgdCBpbiB7dHVwbGUoZC5pdGVtcygpKSBmb3IgZCBpbiBvdXRwdXRfbGlzdH1dCiAgICBpZiBsZW4ob3V0cHV0KSA+IDA6CiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyhvdXRwdXQpKQogICAgZWxzZToKICAgICAgICBwcmludChqc29uLmR1bXBzKFt7Imxpc3RlbmVyX2lwIjogIk5vIGxpc3RlbmVyIGlwIEZvdW5kIn1dKSkKCmV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgIHByaW50KCJGYWlsZWQgdG8gRmV0Y2ggbGlzdGVuZXIgaXAgZnJvbSBEQiIrc3RyKGUpKQ==",
        "_id" : null,
        "_keywords" : null
      }, {
        "name" : null,
        "description" : null,
        "version" : null,
        "type" : "script",
        "fieldIds" : [ "listener_ip" ],
        "responseMapping" : {
          "response" : {
            "" : ""
          }
        },
        "historyReferences" : [ ],
        "usedHistory" : null,
        "sessionId" : null,
        "scriptName" : "Get Listener Port",
        "scriptData" : "c3lzLnBhdGguYXBwZW5kKEFWWDo6REVQRU5ERU5DSUVTKQpzeXMucGF0aC5hcHBlbmQoQVZYOjpIRUxQRVIpCgppbXBvcnQgYXBwdmlld3gKaW1wb3J0IGpzb24KCnRyeToKICAgIGRldmljZV9uYW1lID0gJzxkZXZpY2VfbmFtZT4nCiAgICBsaXN0ZW5lcl9pcCA9ICc8bGlzdGVuZXJfaXA+JwogICAgbGJfdHlwZSA9ICc8bGJfdHlwZT4nLmxvd2VyKCkgaWYgJzxsYl90eXBlPicubG93ZXIoKSA9PSAiaHR0cCIgZWxzZSAic3RyZWFtIgogICAgY29ubmVjdF9kYiA9IGFwcHZpZXd4LmRiX2Nvbm5lY3Rpb24oKQogICAgZGV2aWNlX2RiID0gY29ubmVjdF9kYi5hcHB2aWV3eC5kZXZpY2UKICAgIG1lX2FkYyA9IGNvbm5lY3RfZGIuYXBwdmlld3gubWVfYWRjCgogICAgZGV2aWNlX2RhdGEgPSBbeCBmb3IgeCBpbiBkZXZpY2VfZGIuZmluZCh7Im5hbWUiOmRldmljZV9uYW1lfSkgXVswXQogICAgZGV2aWNlX2lkID0gc3RyKGRldmljZV9kYXRhWyJfaWQiXSkKCiAgICBvdXRwdXRfbGlzdD1beyJsaXN0ZW5lcl9wb3J0IjoiU2VsZWN0In1dCgogICAgZm9yIGVhY2ggaW4gbWVfYWRjLmZpbmQoeyJkZXZpY2VJZCI6ZGV2aWNlX2lkLCJpcCI6bGlzdGVuZXJfaXAsInRyYWZmaWNUeXBlIjpsYl90eXBlfSk6CiAgICAgICAgaWYgInBvcnQiIGluIGVhY2g6IAogICAgICAgICAgICBvdXRwdXRfbGlzdC5hcHBlbmQoeyJsaXN0ZW5lcl9wb3J0IjplYWNoWyJwb3J0Il19KQogICAgICAgICMgaWYgInBvcnQiIGluIGVhY2g6IAogICAgICAgICMgICAgIG91dHB1dF9saXN0LmFwcGVuZCh7Imxpc3RlbmVyX3BvcnQiOmVhY2hbInBvcnQiXX0pCiAgICBpZiBsZW4ob3V0cHV0X2xpc3QpID4gMDoKICAgICAgICBwcmludChqc29uLmR1bXBzKG91dHB1dF9saXN0KSkKICAgIGVsc2U6CiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyhbeyJsaXN0ZW5lcl9pcCI6ICJObyBsaXN0ZW5lciBwb3J0IEZvdW5kIn1dKSkKCmV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgIHByaW50KCJGYWlsZWQgdG8gRmV0Y2ggbGlzdGVuZXIgcG9ydCBmcm9tIERCIik=",
        "_id" : null,
        "_keywords" : null
      } ],
      "accessType" : null,
      "parentTemplate" : null,
      "hiddenTemplate" : false,
      "groupData" : {
        "treeData" : [ ],
        "listData" : [ ]
      },
      "workflow_template_name" : null,
      "_keywords" : null
    },
    "configuration" : {
      "aclIdentifiers" : [ "super access" ],
      "permission" : [ "super access:submit" ],
      "skipFlow" : false,
      "emailConfiguration" : {
        "emailNotificationEnabled" : false,
        "createdNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "reviewedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "submittedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        },
        "rejectedNotificationConfig" : {
          "notifyUser" : false,
          "notifyTargetGroup" : false,
          "emailsList" : [ ]
        }
      },
      "multipleScenarioEnabled" : false,
      "maxScenarioCount" : 0,
      "enableSaveDraft" : true,
      "enableCancel" : true,
      "enableClose" : false,
      "enableBreakDown" : false,
      "labels" : null,
      "enableAutoApprove" : false,
      "failoverState" : 2,
      "successState" : 1,
      "dynamicAuth" : null,
      "regexList" : null,
      "regexOperation" : null,
      "regexPattern" : null,
      "accessMode" : null
    },
    "data" : null,
    "api_list" : null
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "createform_1",
        "taskName" : null,
        "subflowId" : "uLuRsG9J",
        "parentSubflowId" : "",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "workflow_stop_1",
        "taskName" : null,
        "subflowId" : "uLuRsG9J",
        "parentSubflowId" : "",
        "taskType" : "stop",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : "uLuRsG9J",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "device_name",
      "value" : "<%device_name%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "device_name",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "upstream_name",
      "value" : "<%upstream_name%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "upstream_name",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "lb_type",
      "value" : "<%lb_type%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "lb_type",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "requestId",
      "value" : "<%requestId%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "requestId",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "ADC Nginx LB Delete Automation",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_1",
    "task_name" : "ADC Nginx LB Delete Automation",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "# imports\nsys.path.insert(0,AVX::HELPER)\nsys.path.insert(0,AVX::DEPENDENCIES)\nimport paramiko\nimport Decrypt_Python3\nfrom nginx_parser_helper import *\nnull = None\n\n# Global Variables\n\n# Device info\ndevice_name = '<%device_name%>'\nusername,password = Decrypt_Python3.getpassword(device_name)\n\nload_balancing_type = '<%lb_type%>'\nnginx_block = {\"HTTP\":\"http\",\"TCP\":\"stream\"}\n\n# Listener\nupstream_name = '<%upstream_name%>'\n\n# Nginx Path\nappviewx_nginx_path = \"/home/appviewx/appviewx/nginx\"\nnginx_path = \"/etc/nginx/nginx.conf\"\nnginx_backup_file_path = appviewx_nginx_path + \"/nginx_data_bkp_\"+'<%requestId%>'+\".conf\"\nfinal_nginx_conf = appviewx_nginx_path + \"/nginx_data_\"+'<%requestId%>'+\".conf\"\n\n# Methods\n\n\ndef get_nginx_conf():\n\t'''\n\t\tFetches the nginx.conf file from the device and copies to given appviewx path.\n\t'''\n\ttry:\n\t\tftp_client = ssh.open_sftp()\n\t\tftp_client.get(nginx_path, nginx_backup_file_path)\n\t\tftp_client.close()\n\texcept Exception as e:\n\t\tAVX::LOG(\"Exception occured while fetching the conf file from the Nginx device.\")\n\n\ndef push_nginx_conf(nginx_appviewx_path):\n\t'''\n\t\tPushes the nginx.conf file from appviewx to device.\n\t'''\n\ttry:\n\t\tftp_client = ssh.open_sftp()\n\t\tftp_client.put(nginx_appviewx_path, nginx_path)\n\t\tftp_client.close()\n\texcept Exception as e:\n\t\tAVX::LOG(\"Exception occured while pushing the nginx.conf file from appviewx to device.\")\n\ndef push_nginx(parse_status):\n\t'''\n\t\tPush the Nginx conf file to Nginx device if the nginx status is success.\n\t'''\n\ttry:\n\t\tftp_client = ssh.open_sftp()\n\t\tif parse_status == \"success\":\n\t\t\tftp_client.put(final_nginx_conf, nginx_path)\n\t\telse:\n\t\t\tftp_client.put(nginx_backup_file_path, nginx_path)\n\t\tftp_client.close()\n\texcept Exception as e:\n\t\tAVX::LOG(\"Exception occured in push_nginx() --->\\n\"+str(e))\n\t\t\ndef load_nginx_conf():\n\t'''\n\t\tLoads and returns the Nginx conf file as a unspaced list (nginxparser_eb object).\n\t'''\n\ttry:\n\t\treturn load(open(nginx_backup_file_path))\n\t\t\n\texcept Exception as e:\n\t\tAVX::LOG(\"Exception occured while loading the nginx conf file\")\n\ndef dump_nginx_conf(nginx_content):\n\t'''\n\t\tDumps the updated Nginx Config to a file.\n\t'''\n\ttry:\n\t\tnginx_file_content = dumps(nginx_content)\n\t\tfile_writer = open(final_nginx_conf,\"w\")\n\t\tfile_writer.write(nginx_file_content)\n\t\tfile_writer.close()\n\texcept Exception as e:\n\t\tAVX::LOG(\"Exception occured while dumping the Nginx content to the configuration file\")\n\t\tAVX::LOG(str(e))\n\t\ndef parse_the_list(given_list):\n\t'''\n\t\tReturns a String from a list. To write in the nginx.conf file.\n\t'''\n\ttry:\n\t\tstr1= \"\"\n\t\tflag = False\n\t\n\t\tif type(given_list[0]).__name__ == 'list':\n\t\t\tfor each_x in given_list[0]:\n\t\t\t\tif type(each_x).__name__ == 'list':\n\t\t\t\t\tstr1+=parse_the_list(each_x)\n\t\t\t\telse:\n\t\t\t\t\tstr1+=each_x + \" \"\n\t\t\tstr1 = str1.strip()\n\t\t\tstr1 += \" {\\n\\t\"\n\t\t\tflag = True\n\t\t\n\t\tif flag:\n\t\t\t\n\t\t\tfor each_x in given_list[1]:\n\t\t\t\tif type(each_x).__name__ == 'list':\n\t\t\t\t\tstr1+=parse_the_list(each_x)\n\t\t\t\telse:\n\t\t\t\t\tstr1+= each_x + \" \"\n\t\t\t\tstr1+= \"\\t\"\n\t\t\tstr1 = str1.strip()\n\t\t\tstr1 += \"\\t\\n}\\n\"\n\t\t\tflag = False\n\t\telse:\n# \t\t\tUnspacedList\n\t\t\tfor each_x in given_list:\n\t\t\t\tif type(each_x).__name__ == 'list':\n\t\t\t\t\tstr1+=parse_the_list(each_x)\n\t\t\t\telse:\n\t\t\t\t\tstr1+= each_x + \" \"\n\t\t\tstr1 = str1.strip()\n\t\t\tif str1[-1] != ';' and str1[-1] != '#':\n\t\t\t\tstr1+= \";\"\n\t\t\tstr1+=\"\\n\"\n\t\n\t\treturn str1\n\t\t\n\texcept Exception as e:\n\t\tAVX::LOG(\"Exception while dumping the list as a string.\")\n\n\ndef update_nginx_conf(block_name,nginx_content):\n\t'''\n\t\tUpdates and Returns the Nginx content with the Upstream and Listener Content.\n\t'''\n\ttry:\n\t\tfor each_list_val in nginx_content:\n\t\t\tif type(each_list_val[0]).__name__ == 'list' and each_list_val[0][0] == block_name:\n\t\t\t\tfor current_index,each_http_content in enumerate(each_list_val[1]):\n\t\t\t\t\tif type(each_http_content[0]).__name__ == 'list' and each_http_content[0][0] == 'upstream' and each_http_content[0][1] == upstream_name:\n\t\t\t\t\t\tdel each_list_val[1][current_index] # To delete the upstream block\n\t\t\t\t\t\tdel each_list_val[1][current_index] # To delete the listener block\n\t\t\t\n\t\treturn nginx_content\n\t\t\n\texcept Exception as e:\n\t\tAVX::LOG(\"Exception while updating the nginx configuration content with user input.\")\n\t\n\ndef write_to_conf_file(given_string):\n\t'''\n\t\tWrites the nginx content to a .conf file.\n\t'''\n\ttry:\n\t\tfile_writer = open(final_nginx_conf,\"w\")\n\t\tfile_writer.write(nginx_string)\n\t\tfile_writer.close()\n\texcept Exception as e:\n\t\tAVX::LOG(\"Exception while writing the content to conf file.\")\n\t\ndef nginx_status():\n\ttry:\n\t\tnginx_status1 = False\n\t\tnginx_status2 = False\n\t\tstdin, stdout, stderr = ssh.exec_command('nginx -t')\n\t\tout1 = stderr.readlines()\n\t\tAVX::LOG(str(out1))\n\t\tif \"syntax is ok\" in out1[0] and \"test is successful\" in out1[1]:\n\t\t\tnginx_status1 = True\n\t\t\t\n\t\tstdin1, stdout1, stderr1 = ssh.exec_command('service nginx restart')\n\t\trestart_nginx_out = stdout1.readlines()\n\t\tstdin, stdout, stderr = ssh.exec_command('service nginx status')\n\t\tout2 = stdout.readlines()\n\t\tif \"nginx is running\" in out2[0]:\n\t\t\tnginx_status2 = True\n\t\treturn nginx_status1*nginx_status2\n\texcept Exception as e:\n\t\tAVX::LOG(\"Exception occured in nginx_status() --->\\n\"+str(e))\n\t\treturn 0 \n\t\t\nif __name__ == '__main__':\n\t\n\tif not os.path.exists(appviewx_nginx_path):\n\t\tos.makedirs(appviewx_nginx_path)\n\t# SSH\n\ttry:\n\t\tssh = paramiko.SSHClient()\n\t\tssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n\t\tssh.connect(device_name, username=username, password=password)\n\texcept Exception as ssh_exception:\n\t\tAVX::LOG(\"\\n Error while connecting to device over SSH \\n \" + str(ssh_exception))\n\t\t\n\tget_nginx_conf()\n\tnginx_conf_content = load_nginx_conf()\n\tnginx_conf_content = update_nginx_conf(nginx_block[load_balancing_type],nginx_conf_content)\n\tAVX::LOG(str(nginx_conf_content))\n\tdump_nginx_conf(nginx_conf_content)\n# \tnginx_string = \"\"\n# \tfor each_x in nginx_conf_content:\n# \t\tnginx_string += parse_the_list(each_x)\n# \twrite_to_conf_file(nginx_string)\n\t\n\tpush_nginx_conf(final_nginx_conf)\n\t\n\tif not nginx_status():\n\t\tAVX::LOG({\"Nginx Creation failed\\n\"})\n\t\tpush_nginx(\"failed\")\n\t\tAVX::LOG({\"Rollback Nginx Conf file.\"})\n\t\tAVX::OUTPUT({\"nginx_path\": nginx_path,\"nginx_backup_file_path\":nginx_backup_file_path,\"final_nginx_conf\":final_nginx_conf})\n\n\n\n# \tAVX::LOG(str(listener_block))\n# \tAVX::LOG(str(upstream_block))\n\t\n\t\n\t\n\t\n\tAVX::OUTPUT({\"nginx_path\": nginx_path,\"nginx_backup_file_path\":nginx_backup_file_path,\"final_nginx_conf\":final_nginx_conf})",
    "http_method" : "POST",
    "action_id" : "run-script"
  } ],
  "subFlowID" : "bHQoLnqm",
  "taskGlobalData" : {
    "createform_1" : [ {
      "name" : "Nginx Path",
      "key" : "conf_file",
      "value" : "conf_file",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "conf_file",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Device Name",
      "key" : "device_name",
      "value" : "device_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "device_name",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "LB server Port",
      "key" : "listener_port",
      "value" : "listener_port",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "listener_port",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Upstream Server Name",
      "key" : "upstream_name",
      "value" : "upstream_name",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "upstream_name",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "Load Balancing Type",
      "key" : "lb_type",
      "value" : "lb_type",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "TCP,HTTP",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "lb_type",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "LB server IP",
      "key" : "listener_ip",
      "value" : "listener_ip",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : "",
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "listener_ip",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "workflow_stop_1" : [ ],
    "script_1" : [ {
      "name" : "nginx_path",
      "key" : "nginx_path",
      "value" : "nginx_path",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "nginx_path",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "final_nginx_conf",
      "key" : "final_nginx_conf",
      "value" : "final_nginx_conf",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "final_nginx_conf",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : "nginx_backup_file_path",
      "key" : "nginx_backup_file_path",
      "value" : "nginx_backup_file_path",
      "description" : null,
      "dataType" : "string",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "nginx_backup_file_path",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ]
  },
  "type" : null,
  "level" : 0,
  "maxDepth" : 0,
  "input" : null,
  "workflowName" : "Delete LB Server on Nginx plus",
  "description" : null,
  "flowName" : null,
  "workflowType" : "Default",
  "subFlowType" : "Default",
  "parentSubFlowID" : null,
  "logs" : [ ],
  "workflowVersion" : "master"
}, {
  "tasks" : [ {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : null,
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "script_1",
        "taskName" : null,
        "subflowId" : "MhjcXQPJ",
        "parentSubflowId" : "",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : true,
    "flowName" : null,
    "subFlowID" : null,
    "globalData" : null,
    "input" : [ ],
    "notificationMessage" : null,
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Stop",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : null,
    "helpContent" : null,
    "rules" : { },
    "cleanUpFlowDetails" : { },
    "subFlowDetails" : [ ],
    "associatedRollbackWorkOrderDetail" : null,
    "_id" : null,
    "task_id" : "workflow_stop_1",
    "task_name" : "Stop",
    "task_type" : "stop",
    "task_category" : "stop",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : null,
    "group_name" : null,
    "viewable_type" : "custom"
  }, {
    "uniqueId" : null,
    "directoryUniqueId" : null,
    "source" : null,
    "tags" : [ ],
    "userName" : null,
    "objectType" : "TaskDetails",
    "sourceControlSettings" : null,
    "description" : "",
    "historyReferences" : [ ],
    "usedHistory" : null,
    "sampleInput" : null,
    "sampleOutput" : null,
    "contentTab" : null,
    "successiveTasks" : {
      "incoming" : [ {
        "taskId" : "workflow_start_1",
        "taskName" : null,
        "subflowId" : "MhjcXQPJ",
        "parentSubflowId" : "",
        "taskType" : "start",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ],
      "success" : [ {
        "taskId" : "workflow_stop_1",
        "taskName" : null,
        "subflowId" : "MhjcXQPJ",
        "parentSubflowId" : "",
        "taskType" : "stop",
        "flowName" : null,
        "linkType" : null,
        "backwardLink" : false
      } ]
    },
    "flowPathID" : null,
    "ignoredForStatusComputation" : false,
    "flowName" : "",
    "subFlowID" : "MhjcXQPJ",
    "globalData" : null,
    "input" : [ {
      "name" : null,
      "key" : "device_name",
      "value" : "<%device_name%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "device_name",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "nginx_path",
      "value" : "<%nginx_path%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "nginx_path",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "final_nginx_conf",
      "value" : "<%final_nginx_conf%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "final_nginx_conf",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    }, {
      "name" : null,
      "key" : "nginx_backup_file_path",
      "value" : "<%nginx_backup_file_path%>",
      "description" : null,
      "dataType" : "Json",
      "size" : 0,
      "variableType" : "global",
      "defaultValues" : null,
      "mandatory" : false,
      "showToolTip" : false,
      "useDefaultValue" : false,
      "variableDeclared" : false,
      "variableUsed" : false,
      "sourceTasks" : null,
      "destinationTasks" : null,
      "enableForIOVariables" : true,
      "order" : 0,
      "label" : "nginx_backup_file_path",
      "dataValidation" : null,
      "notification" : null,
      "elementType" : null,
      "type" : "Custom",
      "_id" : null
    } ],
    "notificationMessage" : {
      "0" : "",
      "1" : "",
      "2" : ""
    },
    "ancestor" : null,
    "metaData" : {
      "taskHeader" : "Rollback Nginx Conf",
      "hide" : false,
      "lock" : false,
      "successState" : 1,
      "failoverState" : 2,
      "taskScope" : null,
      "hideFromStageView" : false,
      "mode" : "Developer",
      "nature" : "normal",
      "lowCodeTask" : false
    },
    "parentSubFlowID" : "",
    "helpContent" : null,
    "name" : "",
    "syncExecution" : true,
    "_id" : null,
    "task_id" : "script_1",
    "task_name" : "Rollback Nginx Conf",
    "task_type" : "script",
    "task_category" : "script",
    "component_type" : "others",
    "setNullProperties" : true,
    "folderName" : null,
    "sub_group" : "script",
    "group_name" : "General",
    "viewable_type" : "custom",
    "scriptType" : "Python",
    "scriptContent" : "sys.path.insert(0,AVX::HELPER)\nsys.path.insert(0,AVX::DEPENDENCIES)\n\nimport paramiko\nfrom contextlib import contextmanager\nimport Decrypt_Python3\n# from nginxparser import load,dumps\nimport sys\n\n\nhost = \"<%device_name%>\"\nusername,password = Decrypt_Python3.getpassword(host)\n\nssh = paramiko.SSHClient()\nssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\nssh.connect(host, username=username, password=password)\nnginx_path = '<%nginx_path%>'\nnginx_backup_file_path = \"<%nginx_backup_file_path%>\"\nfinal_nginx_conf = \"<%final_nginx_conf%>\"\n\n\n\ndef push_nginx():\n\ttry:\n\t\tftp_client = ssh.open_sftp()\n\t\tftp_client.put(nginx_backup_file_path, nginx_path)\n\t\tftp_client.close()\n\texcept Exception as e:\n\t\tAVX::LOG(\"Exception occured in push_nginx() --->\\n\"+str(e))\n\ndef nginx_status():\n\ttry:\n\t\tstdin, stdout, stderr = ssh.exec_command('nginx -t')\n\t\tout1 = stderr.readlines()\n\t\tif \"syntax is ok\" in out1[0]:\n\t\t\tAVX::LOG(str(out1[0]))\n\t\tif \"test is successful\" in out1[1]:\n\t\t\tAVX::LOG(str(out1[1]))\n\t\tstdin, stdout, stderr = ssh.exec_command('service nginx status')\n\t\tout2 = stdout.readlines()\n\t\tif \"nginx is running\" in out2[0]:\n\t\t\tAVX::LOG(str(out2[0]))\n\t\treturn \"success\"\n\texcept Exception as e:\n\t\tAVX::LOG(\"Exception occured in nginx_status() --->\\n\"+str(e))\n\t\treturn \"failed\" \n\t\t\nif __name__ == '__main__':\n\n\tpush_nginx()\n\tnginx_status()\n\tAVX::OUTPUT({\"nginx_content\":\"success\"})",
    "http_method" : "POST",
    "action_id" : "run-script"
  } ],
  "subFlowID" : "OAUsdmj4",
  "taskGlobalData" : {
    "workflow_stop_1" : [ ],
    "script_1" : [ ]
  },
  "type" : null,
  "level" : 0,
  "maxDepth" : 0,
  "input" : null,
  "workflowName" : "Delete LB Server on Nginx plus",
  "description" : null,
  "flowName" : null,
  "workflowType" : "Rollback",
  "subFlowType" : "Default",
  "parentSubFlowID" : null,
  "logs" : [ ],
  "workflowVersion" : "master"
} ]