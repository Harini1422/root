{"uniqueId":"gnz6gjc8","directoryUniqueId":"Sourcecon001","source":"USER_CREATED","tags":[],"userName":"admin","objectType":"TaskDetails","sourceControlSettings":{"committed":true,"pendingForPushAction":false,"pushActionCompleted":false,"enabledForRemoteRepository":true},"description":null,"historyReferences":[],"usedHistory":null,"sampleInput":null,"sampleOutput":null,"contentTab":null,"successiveTasks":{"incoming":[{"taskId":"gtm_wideip1_1","taskName":null,"subflowId":"pyfonGbS","parentSubflowId":"","taskType":"start","flowName":null,"linkType":null,"backwardLink":false}],"success":[{"taskId":"servicenow_close_change_1","taskName":null,"subflowId":"pyfonGbS","parentSubflowId":"","taskType":"rest","flowName":null,"linkType":null,"backwardLink":false}]},"flowPathID":null,"ignoredForStatusComputation":false,"flowName":"Manage DNS records with create-modify-delete","subFlowID":"bjz4t905","globalData":[],"input":[],"notificationMessage":null,"ancestor":null,"metaData":{"taskHeader":"Manage DNS records with create-modify-delete","hide":false,"lock":false,"successState":1,"failoverState":2,"taskScope":null,"hideFromStageView":false,"mode":"Developer","nature":"normal","lowCodeTask":false},"parentSubFlowID":"7njwvbJS","helpContent":null,"workflowDetail":{"tasks":[{"uniqueId":null,"directoryUniqueId":null,"source":null,"tags":[],"userName":null,"objectType":"TaskDetails","sourceControlSettings":null,"description":null,"historyReferences":[],"usedHistory":null,"sampleInput":null,"sampleOutput":null,"contentTab":null,"successiveTasks":{"incoming":[{"taskId":"join_1","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"start","flowName":null,"linkType":null,"backwardLink":false}]},"flowPathID":null,"ignoredForStatusComputation":true,"flowName":null,"subFlowID":null,"globalData":null,"input":[],"notificationMessage":null,"ancestor":null,"metaData":{"taskHeader":"Stop","hide":false,"lock":false,"successState":1,"failoverState":2,"taskScope":null,"hideFromStageView":false,"mode":"Developer","nature":"normal","lowCodeTask":false},"parentSubFlowID":null,"helpContent":null,"rules":{},"cleanUpFlowDetails":{},"subFlowDetails":[],"associatedRollbackWorkOrderDetail":null,"_id":null,"task_id":"workflow_stop_1","task_name":"Stop","task_type":"stop","task_category":"stop","component_type":"others","setNullProperties":true,"folderName":null,"sub_group":null,"group_name":null,"viewable_type":"custom"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"tags":[],"userName":null,"objectType":"TaskDetails","sourceControlSettings":null,"description":"Get inputs to create one record in an Infoblox device","historyReferences":[],"usedHistory":null,"sampleInput":null,"sampleOutput":null,"contentTab":null,"successiveTasks":{"incoming":[{"taskId":"workflow_start_1","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"start","flowName":null,"linkType":null,"backwardLink":false}],"success":[{"taskId":"parallel_2","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"parallel","flowName":null,"linkType":null,"backwardLink":false}]},"flowPathID":null,"ignoredForStatusComputation":false,"flowName":null,"subFlowID":null,"globalData":null,"input":[{"name":null,"key":"wideip_name","value":"<%wideip_name%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"wideip_name","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null}],"notificationMessage":null,"ancestor":null,"metaData":{"taskHeader":"Infoblox - Input DNS details","hide":false,"lock":false,"successState":1,"failoverState":2,"taskScope":null,"hideFromStageView":false,"mode":"Developer","nature":"normal","lowCodeTask":false},"parentSubFlowID":null,"helpContent":null,"dynamicAuth":null,"regexList":null,"regexOperation":null,"regexPattern":null,"accessMode":null,"proceedProcess":"Submit","breakdownProcess":"Back","cancelProcess":"Cancel","saveDraftProcess":"Save Draft","closeProcess":"Exit","enableSaveDraft":false,"enableCancel":true,"enableClose":false,"enableAutoApprove":null,"enableBreakDown":false,"availableGlobalData":null,"_id":null,"task_id":"createform_1","task_name":"Infoblox - Input DNS details","task_type":"form","task_category":"form","component_type":"form","setNullProperties":true,"folderName":"testfolder","sub_group":"form","group_name":"User interface","viewable_type":"default","aclIdentifiers":null,"template":{"name":"Infoblox - Input DNS details","description":null,"aclIdentifiers":null,"fields":[{"labelName":"operation type","elementType":"Hidden","values":"modify","fieldId":"operation_type","fieldScript":"","aclFilter":"None","dependsOn":"","dataValidation":"","parent":"","help":"","mandatory":true,"predefinedRegex":false,"notification":null,"accessType":"RW","view":"advanced","permission":"submit","group":"","autoTrigger":false,"global":true,"fileName":"","downloadType":null},{"labelName":"Record Type","elementType":"Dropdown","values":"Select,A,PTR,AAAA,CNAME,MX,TXT","fieldId":"record_type","fieldScript":"","aclFilter":"None","dependsOn":"","dataValidation":"","parent":"","help":"Select the record type you want to create","mandatory":true,"predefinedRegex":false,"notification":null,"accessType":"RW","view":"advanced","permission":"submit","group":"DNS Details","autoTrigger":false,"global":true,"fileName":"","downloadType":null},{"labelName":"Select Device","elementType":"Dropdown","values":"","fieldId":"device_name","fieldScript":"Get DNS details","aclFilter":"None","dependsOn":"","dataValidation":"","parent":"","help":"Select the DNS device","mandatory":true,"predefinedRegex":false,"notification":null,"accessType":"RW","view":"advanced","permission":"submit","group":"DNS Details","autoTrigger":true,"global":true,"fileName":"","downloadType":null},{"labelName":"Select DNS View","elementType":"Dropdown","values":"","fieldId":"dns_view","fieldScript":"Get DNS View","aclFilter":"None","dependsOn":"","dataValidation":"","parent":"","help":"Select the DNS view from the dropdown","mandatory":true,"predefinedRegex":false,"notification":null,"accessType":"RW","view":"advanced","permission":"submit","group":"DNS Details","autoTrigger":true,"global":true,"fileName":"","downloadType":null},{"labelName":"Select Zone","elementType":"Dropdown","values":"","fieldId":"zone","fieldScript":"Get Zone","aclFilter":"None","dependsOn":"","dataValidation":"","parent":"","help":"Enter the zone name. Ex: appviewx.com","mandatory":true,"predefinedRegex":false,"notification":null,"accessType":"RW","view":"advanced","permission":"submit","group":"DNS Details","autoTrigger":true,"global":true,"fileName":"","downloadType":null},{"labelName":"wapi","elementType":"Hidden","values":"2.2.2","fieldId":"wapi","fieldScript":"","aclFilter":"None","dependsOn":"","dataValidation":"","parent":"","help":"","mandatory":true,"predefinedRegex":false,"notification":null,"accessType":"RW","view":"advanced","permission":"submit","group":"","autoTrigger":false,"global":true,"fileName":"","downloadType":null},{"labelName":"Enter DNS Name","elementType":"Text box","values":"<%wideip_name%>","fieldId":"dns_name","fieldScript":"","aclFilter":"None","dependsOn":"","dataValidation":"","parent":"","help":"Enter record name. Example: labnode","mandatory":true,"predefinedRegex":false,"notification":null,"accessType":"R","view":"advanced","permission":"submit","group":"DNS Details","autoTrigger":false,"global":true,"fileName":"","downloadType":null},{"labelName":"IP Version","elementType":"Radio button","values":"Enter IP,Get Available IP","fieldId":"ip_version","fieldScript":"","aclFilter":"None","dependsOn":"record_type:A|record_type:PTR|record_type:AAAA","dataValidation":"","parent":"","help":"Select preferred option","mandatory":true,"predefinedRegex":false,"notification":null,"accessType":"RW","view":"advanced","permission":"submit","group":"DNS Details","autoTrigger":false,"global":true,"fileName":"","downloadType":null},{"labelName":"Subnet","elementType":"Dropdown","values":"","fieldId":"subnet","fieldScript":"Get Subnets","aclFilter":"None","dependsOn":"ip_version:Get Available IP","dataValidation":"","parent":"","help":"Select the Subnet to get an available IP address","mandatory":true,"predefinedRegex":false,"notification":null,"accessType":"RW","view":"advanced","permission":"submit","group":"DNS Details","autoTrigger":true,"global":true,"fileName":"","downloadType":null},{"labelName":"IP Address","elementType":"Text box","values":"","fieldId":"ip","fieldScript":"Get Available IP","aclFilter":"None","dependsOn":"record_type:A|record_type:PTR|record_type:AAAA","dataValidation":"","parent":"","help":"Enter a valid IP address. Enter IPv6 address for AAAA record.","mandatory":true,"predefinedRegex":false,"notification":null,"accessType":"RW","view":"advanced","permission":"submit","group":"DNS Details","autoTrigger":true,"global":true,"fileName":"","downloadType":null},{"labelName":"Canonical Name","elementType":"Text box","values":"","fieldId":"canonical","fieldScript":"","aclFilter":"None","dependsOn":"record_type:CNAME","dataValidation":"","parent":"","help":"Enter the canonical name.","mandatory":true,"predefinedRegex":false,"notification":null,"accessType":"RW","view":"advanced","permission":"submit","group":"DNS Details","autoTrigger":false,"global":true,"fileName":"","downloadType":null},{"labelName":"Mail Exchanger Name","elementType":"Text box","values":"","fieldId":"mail_exchanger","fieldScript":"","aclFilter":"None","dependsOn":"record_type:MX","dataValidation":"","parent":"","help":"Enter the mail exchanger name.","mandatory":true,"predefinedRegex":false,"notification":null,"accessType":"RW","view":"advanced","permission":"submit","group":"DNS Details","autoTrigger":false,"global":true,"fileName":"","downloadType":null},{"labelName":"Mail Destination","elementType":"Text box","values":"","fieldId":"mail_destination","fieldScript":"","aclFilter":"None","dependsOn":"record_type:MX","dataValidation":"","parent":"","help":"Enter the Mail Destination name.","mandatory":true,"predefinedRegex":false,"notification":null,"accessType":"RW","view":"advanced","permission":"submit","group":"DNS Details","autoTrigger":false,"global":true,"fileName":"","downloadType":null},{"labelName":"Preference","elementType":"Text box","values":"","fieldId":"preference","fieldScript":"","aclFilter":"None","dependsOn":"record_type:MX","dataValidation":"","parent":"","help":"Enter the preference details","mandatory":true,"predefinedRegex":false,"notification":null,"accessType":"RW","view":"advanced","permission":"submit","group":"DNS Details","autoTrigger":false,"global":true,"fileName":"","downloadType":null},{"labelName":"Text Record","elementType":"Text box","values":"","fieldId":"text_record","fieldScript":"","aclFilter":"None","dependsOn":"record_type:TXT","dataValidation":"","parent":"","help":"Enter the text for creating the TXT record.","mandatory":true,"predefinedRegex":false,"notification":null,"accessType":"RW","view":"advanced","permission":"submit","group":"DNS Details","autoTrigger":false,"global":true,"fileName":"","downloadType":null},{"labelName":"TTL","elementType":"Text box","values":"","fieldId":"ttl","fieldScript":"","aclFilter":"None","dependsOn":"","dataValidation":"","parent":"","help":"Enter time to live value.","mandatory":false,"predefinedRegex":false,"notification":null,"accessType":"RW","view":"advanced","permission":"submit","group":"DNS Details","autoTrigger":false,"global":true,"fileName":"","downloadType":null}],"fieldScripts":[{"name":null,"description":null,"version":null,"type":"script","fieldIds":[],"responseMapping":null,"historyReferences":[],"usedHistory":null,"sessionId":null,"scriptName":"Cancel request","scriptData":"","_id":null,"_keywords":null},{"name":null,"description":null,"version":null,"type":"script","fieldIds":[],"responseMapping":null,"historyReferences":[],"usedHistory":null,"sessionId":null,"scriptName":"Discard request","scriptData":"","_id":null,"_keywords":null},{"name":null,"description":null,"version":null,"type":"script","fieldIds":[],"responseMapping":null,"historyReferences":[],"usedHistory":null,"sessionId":null,"scriptName":"Submit request","scriptData":"","_id":null,"_keywords":null},{"name":null,"description":null,"version":null,"type":"script","fieldIds":["dns_view"],"responseMapping":{"response":{"":""}},"historyReferences":[],"usedHistory":null,"sessionId":null,"scriptName":"Get DNS View","scriptData":"aW1wb3J0IHN5cw0KaW1wb3J0IGpzb24NCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQ0Kc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpERVBFTkRFTkNJRVMpDQppbXBvcnQgYXBwdmlld3gNCmltcG9ydCBsb2dnZXJfdXRpbA0KaW1wb3J0IGluZm9ibG94X2hlbHBlciBhcyBpbmZvYmxveA0KDQpsb2dnZXIgPSBsb2dnZXJfdXRpbC5nZXRfbG9nZ2VyKCdJbmZvYmxveC1BIFJlY29yZCBDcmVhdGlvbicpDQpkZXZpY2VfbmFtZSA9ICc8ZGV2aWNlX25hbWU+Jw0KDQpkZWYgZmV0Y2hfZG5zX3ZpZXcoKToNCiAgICAnJycNCiAgICBmZXRjaCBhbGwgbmV0d29yayB2aWV3cyBpbiBhIGRldmljZQ0KICAgIDpyZXR1cm46ZG5zIHZpZXdzIGluc2lkZSBhIG5ldHdvcmsgdmlldyhsaXN0KQ0KICAgICcnJw0KICAgIG1vZHVsZSA9ICd2aWV3Jw0KICAgIHJlc3BvbnNlX2xpc3QgPSBpbmZvYmxveC5hcGlfaGl0KGRldmljZV9uYW1lLG1vZHVsZSkNCiAgICBkbnNfdmlld19saXN0PVt7ImRuc192aWV3Ijp2YWx1ZVsnbmFtZSddfSBmb3IgdmFsdWUgaW4gcmVzcG9uc2VfbGlzdF0NCiAgICByZXR1cm4gZG5zX3ZpZXdfbGlzdA0KICAgIA0KaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoNCiAgICBkbnNfdmlld19saXN0PWZldGNoX2Ruc192aWV3KCkNCiAgICBpZiBkbnNfdmlld19saXN0Og0KICAgICAgICBwcmludChqc29uLmR1bXBzKGRuc192aWV3X2xpc3QpKQ0KICAgIGVsc2U6DQogICAgICAgIHByaW50KGpzb24uZHVtcHMoeydlcnJvcic6ICdObyBETlMgVmlldyBmb3VuZCd9KSk=","_id":null,"_keywords":null},{"name":null,"description":null,"version":null,"type":"script","fieldIds":["zone"],"responseMapping":{"response":{"":""}},"historyReferences":[],"usedHistory":null,"sessionId":null,"scriptName":"Get Zone","scriptData":"aW1wb3J0IHN5cwppbXBvcnQganNvbgpzeXMucGF0aC5pbnNlcnQoMCxBVlg6OkhFTFBFUikKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpERVBFTkRFTkNJRVMpCmltcG9ydCBhcHB2aWV3eAppbXBvcnQgcmUKaW1wb3J0IGxvZ2dlcl91dGlsCmltcG9ydCBpbmZvYmxveF9oZWxwZXIgYXMgaW5mb2Jsb3gKCmRiX2Nvbm5lY3Rpb24gPSBhcHB2aWV3eC5kYl9jb25uZWN0aW9uKCkKY29sbGVjdGlvbl9kZXZpY2UgPSBkYl9jb25uZWN0aW9uLmFwcHZpZXd4LmRldmljZQoKbG9nZ2VyID0gbG9nZ2VyX3V0aWwuZ2V0X2xvZ2dlcignSW5mb2Jsb3gtQSBSZWNvcmQgQ3JlYXRpb24nKQpkZXZpY2VfbmFtZSA9ICc8ZGV2aWNlX25hbWU+JwpkbnNfdmlldyA9ICc8ZG5zX3ZpZXc+JwoKZGVmIGZldGNoX3pvbmUoZG5zX3ZpZXcpOgogICAgJycnCiAgICBmZXRjaCBhbGwgdGhlIHpvbmVzIGFzc29jaWF0ZWQgdG8gYSBwYXJ0aWN1bGFyIGRucyB2aWV3CiAgICA6cmV0dXJuOiB6b25lcyBpbnNpZGUgYSBkbnMgdmlldyhsaXN0KSAKICAgICcnJwogICAgbW9kdWxlID0gJ3pvbmVfYXV0aD92aWV3PScgKyBkbnNfdmlldwogICAgcmVzcG9uc2VfbGlzdCA9IGluZm9ibG94LmFwaV9oaXQoZGV2aWNlX25hbWUsbW9kdWxlKQogICAgem9uZV9saXN0ID0gW3snem9uZSc6IHZhbHVlWydmcWRuJ119IGZvciB2YWx1ZSBpbiByZXNwb25zZV9saXN0IGlmIG5vdCBib29sKHJlLnNlYXJjaCgnW1xkXStcLltcZF0rXC5bXGRdK1wuW1xkXSsvW1xkXSsnLCB2YWx1ZVsnZnFkbiddKSldCiAgICB6b25lX2xpc3QgPSBzb3J0ZWQoem9uZV9saXN0LCBrZXk9bGFtYmRhIGs6IGtbJ3pvbmUnXS5sb3dlcigpKQogICAgcmV0dXJuIHpvbmVfbGlzdAoKZGVmIGdldF9kZXZpY2VfaXBfd2FwaXZlcnNpb24oZGV2aWNlX25hbWUpOgogICAgZm9yIGRldmljZSBpbiBjb2xsZWN0aW9uX2RldmljZS5maW5kKHsnbmFtZSc6IGRldmljZV9uYW1lfSx7J2lwJzogMSwgJ2F0dHJpYnV0ZXMnOiAxfSk6CiAgICAgICAgcmV0dXJuIGRldmljZVsnaXAnXSwgZGV2aWNlWydhdHRyaWJ1dGVzJ11bJ3dhcGlWZXJzaW9uJ10KCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICB6b25lX2xpc3QgPSBmZXRjaF96b25lKGRuc192aWV3KQogICAgaXAsd2FwaSA9IGdldF9kZXZpY2VfaXBfd2FwaXZlcnNpb24oZGV2aWNlX25hbWUpCiAgICAKICAgIGlmIHpvbmVfbGlzdDoKICAgICAgICB6b25lX2xpc3QuYXBwZW5kKHsid2FwaSI6d2FwaX0pCiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyh6b25lX2xpc3QpKQogICAgZWxzZToKICAgICAgICBwcmludChqc29uLmR1bXBzKHsnZXJyb3InOiAnTm8gWm9uZXMgZm91bmQnfSkpCiAgICAgICAgCiAgICAgICAKCg==","_id":null,"_keywords":null},{"name":null,"description":null,"version":null,"type":"script","fieldIds":["subnet"],"responseMapping":{"response":{"":""}},"historyReferences":[],"usedHistory":null,"sessionId":null,"scriptName":"Get Subnets","scriptData":"aW1wb3J0IG9zCmltcG9ydCBzeXMKaW1wb3J0IGpzb24Kc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpERVBFTkRFTkNJRVMpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQpmcm9tIEROU19oZWxwZXIgaW1wb3J0IEluZm9ibG94CgpmaW5hbF9saXN0ID0gW10KZGV2aWNlX25hbWUgPSAnPGRldmljZV9uYW1lPicKaXBfdmVyc2lvbiA9ICc8aXBfdmVyc2lvbj4nCmltcG9ydCBhcHB2aWV3eAoKJycnCkRCIENvbm5lY3Rpb24KJycnCmNvbm5lY3Rpb24gPSBhcHB2aWV3eC5kYl9jb25uZWN0aW9uKCkKY29sbGVjdGlvbiA9IGNvbm5lY3Rpb24uYXBwdmlld3guZGV2aWNlCgoKCmlmIGRldmljZV9uYW1lIGFuZCBpcF92ZXJzaW9uID09ICJHZXQgQXZhaWxhYmxlIElQIjoKICAgIHRyeToKICAgICAgICBzdWJuZXRfbGlzdCA9IEluZm9ibG94LmdldF9zdWJuZXQoZGV2aWNlX25hbWUpCiAgICAgICAgZmluYWxfbGlzdCA9IFsgeydzdWJuZXQnOnN1Ym5ldCB9IGZvciBzdWJuZXQgaW4gc3VibmV0X2xpc3QgXQogICAgICAgIHByaW50KGpzb24uZHVtcHMoZmluYWxfbGlzdCkpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoanNvbi5kdW1wcyh7J2Vycm9yJzogcmVwcihlKX0pKQplbHNlOgogICAgcHJpbnQoanNvbi5kdW1wcyh7J2Vycm9yJzonUGxlYXNlIHNlbGVjdCBhbiBJbmZvYmxveCBEZXZpY2UnfSkp","_id":null,"_keywords":null},{"name":null,"description":null,"version":null,"type":"script","fieldIds":["ip"],"responseMapping":{"response":{"":""}},"historyReferences":[],"usedHistory":null,"sessionId":null,"scriptName":"Get Available IP","scriptData":"aW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgb3MKc3lzLnBhdGguaW5zZXJ0KDAsQVZYOjpERVBFTkRFTkNJRVMpCnN5cy5wYXRoLmluc2VydCgwLEFWWDo6SEVMUEVSKQoKZnJvbSBETlNfaGVscGVyIGltcG9ydCBJbmZvYmxveAppbXBvcnQgYXBwdmlld3gKc3VibmV0ID0gJzxzdWJuZXQ+JwpkZXZpY2VfbmFtZSA9ICc8ZGV2aWNlX25hbWU+JwppcF92ZXJzaW9uID0gJzxpcF92ZXJzaW9uPicKCicnJwpEQiBDb25uZWN0aW9uCicnJwpjb25uZWN0aW9uID0gYXBwdmlld3guZGJfY29ubmVjdGlvbigpCmNvbGxlY3Rpb24gPSBjb25uZWN0aW9uLmFwcHZpZXd4LmRldmljZQoKaWYgc3VibmV0ICE9ICcnOgogICAgdHJ5OgogICAgICAgIG91dHB1dCA9ICcnCiAgICAgICAgaXAgPSBJbmZvYmxveC5nZXRfZnJlZV9pcChkZXZpY2VfbmFtZSwgc3VibmV0KQogICAgICAgIGlmIGlwOgogICAgICAgICAgICBwcmludChqc29uLmR1bXBzKFt7ImlwIjppcH1dKSkKICAgICAgICBlbHNlOgogICAgICAgICAgICBwcmludChqc29uLmR1bXBzKHsiZXJyb3IiOiJJUCBub3QgYXZhaWxhYmxlLlBsZWFzZSBzZWxlY3QgYSBkaWZmZXJlbnQgU3VibmV0In0pKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIHBhc3MKZWxpZiBpcF92ZXJzaW9uICE9ICdHZXQgQXZhaWxhYmxlIElQJzoKICAgIHBhc3MKZWxzZToKICAgIHByaW50KGpzb24uZHVtcHMoeydlcnJvcic6ICdQbGVhc2Ugc2VsZWN0IGEgU3VibmV0J30pKQ==","_id":null,"_keywords":null},{"name":"Get DNS details","description":null,"version":null,"type":"queryExplorer","fieldIds":["device_name"],"responseMapping":{"response":{"device_name":"name"}},"historyReferences":[],"usedHistory":null,"sessionId":null,"queryBuilderName":"Get DNS details","category":"General","queryBuilderDescription":null,"filters":{"rules":[{"field":"vendor","dataType":"String","value":"Infoblox","operation":"equal","rules":null,"aggregation":null}],"aggregation":"AND"},"module":"Device Inventory","projectionFields":["name"],"sorts":null,"pagination":null,"count":false,"customFieldOOB":false,"distinct":null,"queryExplorerLocation":null,"_id":null,"_keywords":null}],"accessType":null,"parentTemplate":null,"hiddenTemplate":false,"groupData":{"treeData":[{"name":"DNS Details","id":987.0},{"name":"Record Specific Details","id":916.0},{"name":"Change Details","id":340.0}],"listData":["DNS Details","Record Specific Details","Change Details"]},"workflow_template_name":null,"_keywords":null},"configuration":{"aclIdentifiers":["super access"],"permission":["super access:submit"],"skipFlow":false,"emailConfiguration":{"emailNotificationEnabled":false,"createdNotificationConfig":{"notifyUser":false,"notifyTargetGroup":false,"emailsList":[]},"reviewedNotificationConfig":{"notifyUser":false,"notifyTargetGroup":false,"emailsList":[]},"submittedNotificationConfig":{"notifyUser":false,"notifyTargetGroup":false,"emailsList":[]},"rejectedNotificationConfig":{"notifyUser":false,"notifyTargetGroup":false,"emailsList":[]}},"multipleScenarioEnabled":false,"maxScenarioCount":1,"enableSaveDraft":false,"enableCancel":true,"enableClose":false,"enableBreakDown":false,"labels":{"submit":"Next","reject":""},"enableAutoApprove":false,"failoverState":2,"successState":1,"dynamicAuth":null,"regexList":null,"regexOperation":null,"regexPattern":null,"accessMode":null},"data":null,"api_list":null},{"uniqueId":null,"directoryUniqueId":null,"source":null,"tags":[],"userName":null,"objectType":"TaskDetails","sourceControlSettings":null,"description":"","historyReferences":[],"usedHistory":null,"sampleInput":null,"sampleOutput":null,"contentTab":null,"successiveTasks":{"incoming":[{"taskId":"parallel_2","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"start","flowName":null,"linkType":null,"backwardLink":false}],"success":[{"taskId":"join_1","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"join","flowName":null,"linkType":null,"backwardLink":false}]},"flowPathID":null,"ignoredForStatusComputation":false,"flowName":"","subFlowID":"pYyR7rav","globalData":null,"input":[{"name":null,"key":"dns_name","value":"<%dns_name%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"dns_name","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"operation_type","value":"<%operation_type%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"operation_type","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"ip","value":"<%ip%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"ip","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"dns_view","value":"<%dns_view%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"dns_view","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"sessionId","value":"<%sessionId%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"sessionId","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"device_name","value":"<%device_name%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"device_name","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"zone","value":"<%zone%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"zone","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"wapi","value":"<%wapi%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"wapi","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null}],"notificationMessage":{"0":"","1":"","2":""},"ancestor":null,"metaData":{"taskHeader":"A record","hide":false,"lock":false,"successState":1,"failoverState":2,"taskScope":null,"hideFromStageView":false,"mode":"Developer","nature":"normal","lowCodeTask":false},"parentSubFlowID":"","helpContent":null,"name":"","syncExecution":true,"_id":null,"task_id":"script_3","task_name":"A record","task_type":"script","task_category":"script","component_type":"others","setNullProperties":true,"folderName":null,"sub_group":"script","group_name":"General","viewable_type":"custom","scriptType":"Python","scriptContent":"sys.path.insert(0,AVX::HELPER)\r\nsys.path.insert(0,AVX::DEPENDENCIES)\r\n\r\nnull = None\r\nimport commandrepoconnectorv2 as command_repo_connector\r\nimport json\r\n\r\nreturn_command = False\r\n\r\n# Get User Input\r\ninput_dict = {}\r\ninput_dict[\"device_name\"] = \"<%device_name%>\"\r\ninput_dict[\"wapi\"] = \"<%wapi%>\"\r\ninput_dict[\"ipv4addr\"] = \"<%ip%>\"\r\ninput_dict[\"fqdn\"] = \"<%dns_name%>\"+\".<%zone%>\"\r\ninput_dict[\"view\"] = \"<%dns_view%>\"\r\noperation_type = \"<%operation_type%>\"\r\n\r\n\r\nconfigure_ip_for_create_intent =  'create-a-record'\r\nconfigure_ip_for_fetch_intent = 'get-a-record'\r\nconfigure_ip_for_modify_intent = 'modify-a-record'\r\nconfigure_ip_for_delete_intent = 'delete-a-record'\r\nsession_id =\"<%sessionId%>\"\r\n\r\n\r\ndef create_a_record(intent):\r\n    try:\r\n        response = command_repo_connector.command_repo_connector(session_id,intent,return_command,{k:v for k,v in input_dict_main.items() if v is not None})\r\n        AVX::LOG(\"Response from create Command repo \" + str(response))\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            AVX::OUTPUT(response)\r\n        else :\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response ={}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\ndef modify_a_record(intent):\r\n    try:\r\n        response_fetch = command_repo_connector.command_repo_connector(session_id, configure_ip_for_fetch_intent,\r\n                                                                       return_command,\r\n                                                                       {k: v for k, v in input_dict_main.items() if\r\n                                                                        v is not None})\r\n        AVX::LOG(\"Response from modify Command repo \" + str(response_fetch))\r\n        if \"data\" in response_fetch:\r\n            for item in eval(response_fetch[\"data\"][0][\"response_entity\"]):\r\n                if \"_ref\" in item:\r\n                    input_dict[\"_ref\"] = item[\"_ref\"]\r\n        if \"data\" not in response_fetch or \"_ref\" not in input_dict:\r\n            response_fetch[\"status\"] = \"failed\"\r\n            response_fetch[\"error\"] = \"failed due to reference id not found\"\r\n            return response_fetch\r\n        response = command_repo_connector.command_repo_connector(session_id, intent,\r\n                                                                 return_command,\r\n                                                                 {k: v for k, v in input_dict_main.items() if\r\n                                                                  v is not None})\r\n        AVX::LOG(\"Response from Command repo \" + str(response))\r\n\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            return response\r\n        else:\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\ndef delete_a_record(intent):\r\n    try:\r\n        response_fetch = command_repo_connector.command_repo_connector(session_id, configure_ip_for_fetch_intent,\r\n                                                                       return_command,\r\n                                                                       {k: v for k, v in input_dict_main.items() if\r\n                                                                        v is not None})\r\n        AVX::LOG(\"Response from delete Command repo \" + str(response_fetch))\r\n        if \"data\" in response_fetch:\r\n            for item in eval(response_fetch[\"data\"][0][\"response_entity\"]):\r\n                if \"_ref\" in item:\r\n                    input_dict[\"_ref\"] = item[\"_ref\"]\r\n        if \"data\" not in response_fetch or \"_ref\" not in input_dict:\r\n            response_fetch[\"status\"] = \"failed\"\r\n            response_fetch[\"error\"] = \"failed due to reference id not found\"\r\n            return response_fetch\r\n        response = command_repo_connector.command_repo_connector(session_id, intent,\r\n                                                                 return_command,\r\n                                                                 {k: v for k, v in input_dict_main.items() if\r\n                                                                  v is not None})\r\n        AVX::LOG(\"Response from Command repo \" + str(response))\r\n\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            return response\r\n        else:\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\nif __name__ == '__main__':\r\n    AVX::LOG('Main - Started Task : Infoblox rest')\r\n    output = {}\r\n    input_dict_main = {}\r\n\r\n    try:\r\n        input_dict_main = input_dict\r\n        '''\r\n        Passing the user input to command repo\r\n        '''\r\n        AVX::LOG(str(input_dict_main))\r\n        if operation_type == \"create\":\r\n            final_response = create_a_record(configure_ip_for_create_intent)\r\n        elif operation_type == \"modify\":\r\n            final_response = modify_a_record(configure_ip_for_modify_intent)\r\n        else:\r\n            final_response = delete_a_record(configure_ip_for_delete_intent)\r\n\r\n        if \"status\" in final_response and final_response[\"status\"] ==\"success\":\r\n            final_response[\"status\"] = \"success\"\r\n            AVX::OUTPUT(final_response)\r\n        else:\r\n            final_response[\"status\"] = \"failed\"\r\n            AVX::OUTPUT(final_response, 2)\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        AVX::OUTPUT(response, 2)\r\n","http_method":"POST","action_id":"run-script"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"tags":[],"userName":null,"objectType":"TaskDetails","sourceControlSettings":null,"description":"","historyReferences":[],"usedHistory":null,"sampleInput":null,"sampleOutput":null,"contentTab":null,"successiveTasks":{"incoming":[{"taskId":"parallel_2","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"start","flowName":null,"linkType":null,"backwardLink":false}],"success":[{"taskId":"join_1","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"join","flowName":null,"linkType":null,"backwardLink":false}]},"flowPathID":null,"ignoredForStatusComputation":false,"flowName":"","subFlowID":"pYyR7rav","globalData":null,"input":[{"name":null,"key":"dns_name","value":"<%dns_name%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"dns_name","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"operation_type","value":"<%operation_type%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"operation_type","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"text_record","value":"<%text_record%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"text_record","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"dns_view","value":"<%dns_view%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"dns_view","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"sessionId","value":"<%sessionId%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"sessionId","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"device_name","value":"<%device_name%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"device_name","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"zone","value":"<%zone%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"zone","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"wapi","value":"<%wapi%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"wapi","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null}],"notificationMessage":{"0":"","1":"","2":""},"ancestor":null,"metaData":{"taskHeader":"TXT record","hide":false,"lock":false,"successState":1,"failoverState":2,"taskScope":null,"hideFromStageView":false,"mode":"Developer","nature":"normal","lowCodeTask":false},"parentSubFlowID":"","helpContent":null,"name":"","syncExecution":true,"_id":null,"task_id":"script_4","task_name":"TXT record","task_type":"script","task_category":"script","component_type":"others","setNullProperties":true,"folderName":null,"sub_group":"script","group_name":"General","viewable_type":"custom","scriptType":"Python","scriptContent":"sys.path.insert(0,AVX::HELPER)\r\nsys.path.insert(0,AVX::DEPENDENCIES)\r\n\r\nnull = None\r\nimport commandrepoconnectorv2 as command_repo_connector\r\nimport json\r\n\r\nreturn_command = False\r\n\r\n# Get User Input\r\ninput_dict = {}\r\ninput_dict[\"device_name\"] = \"<%device_name%>\"\r\ninput_dict[\"wapi\"] = \"<%wapi%>\"\r\n\r\ninput_dict[\"fqdn\"] = \"<%dns_name%>\"+\".<%zone%>\"\r\ninput_dict[\"text\"] = \"<%text_record%>\"\r\ninput_dict[\"view\"] = \"<%dns_view%>\"\r\noperation_type = \"<%operation_type%>\"\r\n\r\n\r\nconfigure_ip_for_create_intent =  'create-txt-record'\r\nconfigure_ip_for_fetch_intent = 'get-txt-record'\r\nconfigure_ip_for_modify_intent = 'modify-txt-record'\r\nconfigure_ip_for_delete_intent = 'delete-txt-record'\r\nsession_id =\"<%sessionId%>\"\r\n\r\n\r\ndef create_a_record(intent):\r\n    try:\r\n        response = command_repo_connector.command_repo_connector(session_id,intent,return_command,{k:v for k,v in input_dict_main.items() if v is not None})\r\n        AVX::LOG(\"Response from create Command repo \" + str(response))\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            AVX::OUTPUT(response)\r\n        else :\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response ={}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\ndef modify_a_record(intent):\r\n    try:\r\n        response_fetch = command_repo_connector.command_repo_connector(session_id, configure_ip_for_fetch_intent,\r\n                                                                       return_command,\r\n                                                                       {k: v for k, v in input_dict_main.items() if\r\n                                                                        v is not None})\r\n        AVX::LOG(\"Response from modify Command repo \" + str(response_fetch))\r\n        if \"data\" in response_fetch:\r\n            for item in eval(response_fetch[\"data\"][0][\"response_entity\"]):\r\n                if \"_ref\" in item:\r\n                    input_dict[\"_ref\"] = item[\"_ref\"]\r\n        if \"data\" not in response_fetch or \"_ref\" not in input_dict:\r\n            response_fetch[\"status\"] = \"failed\"\r\n            response_fetch[\"error\"] = \"failed due to reference id not found\"\r\n            return response_fetch\r\n        response = command_repo_connector.command_repo_connector(session_id, intent,\r\n                                                                 return_command,\r\n                                                                 {k: v for k, v in input_dict_main.items() if\r\n                                                                  v is not None})\r\n        AVX::LOG(\"Response from Command repo \" + str(response))\r\n\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            return response\r\n        else:\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\ndef delete_a_record(intent):\r\n    try:\r\n        response_fetch = command_repo_connector.command_repo_connector(session_id, configure_ip_for_fetch_intent,\r\n                                                                       return_command,\r\n                                                                       {k: v for k, v in input_dict_main.items() if\r\n                                                                        v is not None})\r\n        AVX::LOG(\"Response from delete Command repo \" + str(response_fetch))\r\n        if \"data\" in response_fetch:\r\n            for item in eval(response_fetch[\"data\"][0][\"response_entity\"]):\r\n                if \"_ref\" in item:\r\n                    input_dict[\"_ref\"] = item[\"_ref\"]\r\n        if \"data\" not in response_fetch or \"_ref\" not in input_dict:\r\n            response_fetch[\"status\"] = \"failed\"\r\n            response_fetch[\"error\"] = \"failed due to reference id not found\"\r\n            return response_fetch\r\n        response = command_repo_connector.command_repo_connector(session_id, intent,\r\n                                                                 return_command,\r\n                                                                 {k: v for k, v in input_dict_main.items() if\r\n                                                                  v is not None})\r\n        AVX::LOG(\"Response from Command repo \" + str(response))\r\n\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            return response\r\n        else:\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\nif __name__ == '__main__':\r\n    AVX::LOG('Main - Started Task : Infoblox rest')\r\n    output = {}\r\n    input_dict_main = {}\r\n\r\n    try:\r\n        input_dict_main = input_dict\r\n        '''\r\n        Passing the user input to command repo\r\n        '''\r\n        AVX::LOG(str(input_dict_main))\r\n        if operation_type == \"create\":\r\n            final_response = create_a_record(configure_ip_for_create_intent)\r\n        elif operation_type == \"modify\":\r\n            final_response = modify_a_record(configure_ip_for_modify_intent)\r\n        else:\r\n            final_response = delete_a_record(configure_ip_for_delete_intent)\r\n\r\n        if \"status\" in final_response and final_response[\"status\"] ==\"success\":\r\n            final_response[\"status\"] = \"success\"\r\n            AVX::OUTPUT(final_response)\r\n        else:\r\n            final_response[\"status\"] = \"failed\"\r\n            AVX::OUTPUT(final_response, 2)\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        AVX::OUTPUT(response, 2)\r\n","http_method":"POST","action_id":"run-script"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"tags":[],"userName":null,"objectType":"TaskDetails","sourceControlSettings":null,"description":"","historyReferences":[],"usedHistory":null,"sampleInput":null,"sampleOutput":null,"contentTab":null,"successiveTasks":{"incoming":[{"taskId":"parallel_2","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"start","flowName":null,"linkType":null,"backwardLink":false}],"success":[{"taskId":"join_1","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"join","flowName":null,"linkType":null,"backwardLink":false}]},"flowPathID":null,"ignoredForStatusComputation":false,"flowName":"","subFlowID":"pYyR7rav","globalData":null,"input":[{"name":null,"key":"dns_name","value":"<%dns_name%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"dns_name","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"operation_type","value":"<%operation_type%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"operation_type","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"ip","value":"<%ip%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"ip","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"dns_view","value":"<%dns_view%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"dns_view","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"sessionId","value":"<%sessionId%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"sessionId","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"device_name","value":"<%device_name%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"device_name","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"zone","value":"<%zone%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"zone","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"wapi","value":"<%wapi%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"wapi","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null}],"notificationMessage":{"0":"","1":"","2":""},"ancestor":null,"metaData":{"taskHeader":"AAAA record","hide":false,"lock":false,"successState":1,"failoverState":2,"taskScope":null,"hideFromStageView":false,"mode":"Developer","nature":"normal","lowCodeTask":false},"parentSubFlowID":"","helpContent":null,"name":"","syncExecution":true,"_id":null,"task_id":"script_5","task_name":"AAAA record","task_type":"script","task_category":"script","component_type":"others","setNullProperties":true,"folderName":null,"sub_group":"script","group_name":"General","viewable_type":"custom","scriptType":"Python","scriptContent":"sys.path.insert(0,AVX::HELPER)\r\nsys.path.insert(0,AVX::DEPENDENCIES)\r\n\r\nnull = None\r\nimport commandrepoconnectorv2 as command_repo_connector\r\nimport json\r\n\r\nreturn_command = False\r\n\r\n# Get User Input\r\ninput_dict = {}\r\ninput_dict[\"device_name\"] = \"<%device_name%>\"\r\ninput_dict[\"wapi\"] = \"<%wapi%>\"\r\n\r\ninput_dict[\"ipv6addr\"] = \"<%ip%>\"\r\ninput_dict[\"fqdn\"] = \"<%dns_name%>\"+\".<%zone%>\"\r\ninput_dict[\"view\"] = \"<%dns_view%>\"\r\noperation_type = \"<%operation_type%>\"\r\n\r\n\r\nconfigure_ip_for_create_intent =  'create-aaaa-record'\r\nconfigure_ip_for_fetch_intent = 'get-aaaa-record'\r\nconfigure_ip_for_modify_intent = 'modify-aaaa-record'\r\nconfigure_ip_for_delete_intent = 'delete-aaaa-record'\r\nsession_id =\"<%sessionId%>\"\r\n\r\n\r\ndef create_a_record(intent):\r\n    try:\r\n        response = command_repo_connector.command_repo_connector(session_id,intent,return_command,{k:v for k,v in input_dict_main.items() if v is not None})\r\n        AVX::LOG(\"Response from create Command repo \" + str(response))\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            AVX::OUTPUT(response)\r\n        else :\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response ={}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\ndef modify_a_record(intent):\r\n    try:\r\n        response_fetch = command_repo_connector.command_repo_connector(session_id, configure_ip_for_fetch_intent,\r\n                                                                       return_command,\r\n                                                                       {k: v for k, v in input_dict_main.items() if\r\n                                                                        v is not None})\r\n        AVX::LOG(\"Response from modify Command repo \" + str(response_fetch))\r\n        if \"data\" in response_fetch:\r\n            for item in eval(response_fetch[\"data\"][0][\"response_entity\"]):\r\n                if \"_ref\" in item:\r\n                    input_dict[\"_ref\"] = item[\"_ref\"]\r\n        if \"data\" not in response_fetch or \"_ref\" not in input_dict:\r\n            response_fetch[\"status\"] = \"failed\"\r\n            response_fetch[\"error\"] = \"failed due to reference id not found\"\r\n            return response_fetch\r\n        response = command_repo_connector.command_repo_connector(session_id, intent,\r\n                                                                 return_command,\r\n                                                                 {k: v for k, v in input_dict_main.items() if\r\n                                                                  v is not None})\r\n        AVX::LOG(\"Response from Command repo \" + str(response))\r\n\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            return response\r\n        else:\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\ndef delete_a_record(intent):\r\n    try:\r\n        response_fetch = command_repo_connector.command_repo_connector(session_id, configure_ip_for_fetch_intent,\r\n                                                                       return_command,\r\n                                                                       {k: v for k, v in input_dict_main.items() if\r\n                                                                        v is not None})\r\n        AVX::LOG(\"Response from delete Command repo \" + str(response_fetch))\r\n        if \"data\" in response_fetch:\r\n            for item in eval(response_fetch[\"data\"][0][\"response_entity\"]):\r\n                if \"_ref\" in item:\r\n                    input_dict[\"_ref\"] = item[\"_ref\"]\r\n        if \"data\" not in response_fetch or \"_ref\" not in input_dict:\r\n            response_fetch[\"status\"] = \"failed\"\r\n            response_fetch[\"error\"] = \"failed due to reference id not found\"\r\n            return response_fetch\r\n        response = command_repo_connector.command_repo_connector(session_id, intent,\r\n                                                                 return_command,\r\n                                                                 {k: v for k, v in input_dict_main.items() if\r\n                                                                  v is not None})\r\n        AVX::LOG(\"Response from Command repo \" + str(response))\r\n\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            return response\r\n        else:\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\nif __name__ == '__main__':\r\n    AVX::LOG('Main - Started Task : Infoblox rest')\r\n    output = {}\r\n    input_dict_main = {}\r\n\r\n    try:\r\n        input_dict_main = input_dict\r\n        '''\r\n        Passing the user input to command repo\r\n        '''\r\n        AVX::LOG(str(input_dict_main))\r\n        if operation_type == \"create\":\r\n            final_response = create_a_record(configure_ip_for_create_intent)\r\n        elif operation_type == \"modify\":\r\n            final_response = modify_a_record(configure_ip_for_modify_intent)\r\n        else:\r\n            final_response = delete_a_record(configure_ip_for_delete_intent)\r\n\r\n        if \"status\" in final_response and final_response[\"status\"] ==\"success\":\r\n            final_response[\"status\"] = \"success\"\r\n            AVX::OUTPUT(final_response)\r\n        else:\r\n            final_response[\"status\"] = \"failed\"\r\n            AVX::OUTPUT(final_response, 2)\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        AVX::OUTPUT(response, 2)\r\n","http_method":"POST","action_id":"run-script"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"tags":[],"userName":null,"objectType":"TaskDetails","sourceControlSettings":null,"description":"","historyReferences":[],"usedHistory":null,"sampleInput":null,"sampleOutput":null,"contentTab":null,"successiveTasks":{"incoming":[{"taskId":"parallel_2","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"start","flowName":null,"linkType":null,"backwardLink":false}],"success":[{"taskId":"join_1","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"join","flowName":null,"linkType":null,"backwardLink":false}]},"flowPathID":null,"ignoredForStatusComputation":false,"flowName":"","subFlowID":"pYyR7rav","globalData":null,"input":[{"name":null,"key":"dns_name","value":"<%dns_name%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"dns_name","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"operation_type","value":"<%operation_type%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"operation_type","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"canonical","value":"<%canonical%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"canonical","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"dns_view","value":"<%dns_view%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"dns_view","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"sessionId","value":"<%sessionId%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"sessionId","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"device_name","value":"<%device_name%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"device_name","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"zone","value":"<%zone%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"zone","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"wapi","value":"<%wapi%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"wapi","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null}],"notificationMessage":{"0":"","1":"","2":""},"ancestor":null,"metaData":{"taskHeader":"CNAME record","hide":false,"lock":false,"successState":1,"failoverState":2,"taskScope":null,"hideFromStageView":false,"mode":"Developer","nature":"normal","lowCodeTask":false},"parentSubFlowID":"","helpContent":null,"name":"","syncExecution":true,"_id":null,"task_id":"script_6","task_name":"CNAME record","task_type":"script","task_category":"script","component_type":"others","setNullProperties":true,"folderName":null,"sub_group":"script","group_name":"General","viewable_type":"custom","scriptType":"Python","scriptContent":"sys.path.insert(0,AVX::HELPER)\r\nsys.path.insert(0,AVX::DEPENDENCIES)\r\n\r\nnull = None\r\nimport commandrepoconnectorv2 as command_repo_connector\r\nimport json\r\n\r\nreturn_command = False\r\n\r\n# Get User Input\r\ninput_dict = {}\r\ninput_dict[\"device_name\"] = \"<%device_name%>\"\r\ninput_dict[\"wapi\"] = \"<%wapi%>\"\r\n\r\ninput_dict[\"fqdn\"] = \"<%dns_name%>\"+\".<%zone%>\"\r\ninput_dict[\"canonical\"] = \"<%canonical%>\"+\".<%zone%>\"\r\ninput_dict[\"dns_view\"] = \"<%dns_view%>\"\r\n\r\noperation_type = \"<%operation_type%>\"\r\n\r\n\r\nconfigure_ip_for_create_intent =  'create-cname-record'\r\nconfigure_ip_for_fetch_intent = 'get-cname-record'\r\nconfigure_ip_for_modify_intent = 'modify-cname-record'\r\nconfigure_ip_for_delete_intent = 'delete-cname-record'\r\nsession_id =\"<%sessionId%>\"\r\n\r\n\r\ndef create_a_record(intent):\r\n    try:\r\n        response = command_repo_connector.command_repo_connector(session_id,intent,return_command,{k:v for k,v in input_dict_main.items() if v is not None})\r\n        AVX::LOG(\"Response from create Command repo \" + str(response))\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            AVX::OUTPUT(response)\r\n        else :\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response ={}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\ndef modify_a_record(intent):\r\n    try:\r\n        response_fetch = command_repo_connector.command_repo_connector(session_id, configure_ip_for_fetch_intent,\r\n                                                                       return_command,\r\n                                                                       {k: v for k, v in input_dict_main.items() if\r\n                                                                        v is not None})\r\n        AVX::LOG(\"Response from modify Command repo \" + str(response_fetch))\r\n        if \"data\" in response_fetch:\r\n            for item in eval(response_fetch[\"data\"][0][\"response_entity\"]):\r\n                if \"_ref\" in item:\r\n                    input_dict[\"_ref\"] = item[\"_ref\"]\r\n        if \"data\" not in response_fetch or \"_ref\" not in input_dict:\r\n            response_fetch[\"status\"] = \"failed\"\r\n            response_fetch[\"error\"] = \"failed due to reference id not found\"\r\n            return response_fetch\r\n        response = command_repo_connector.command_repo_connector(session_id, intent,\r\n                                                                 return_command,\r\n                                                                 {k: v for k, v in input_dict_main.items() if\r\n                                                                  v is not None})\r\n        AVX::LOG(\"Response from Command repo \" + str(response))\r\n\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            return response\r\n        else:\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\ndef delete_a_record(intent):\r\n    try:\r\n        response_fetch = command_repo_connector.command_repo_connector(session_id, configure_ip_for_fetch_intent,\r\n                                                                       return_command,\r\n                                                                       {k: v for k, v in input_dict_main.items() if\r\n                                                                        v is not None})\r\n        AVX::LOG(\"Response from delete Command repo \" + str(response_fetch))\r\n        if \"data\" in response_fetch:\r\n            for item in eval(response_fetch[\"data\"][0][\"response_entity\"]):\r\n                if \"_ref\" in item:\r\n                    input_dict[\"_ref\"] = item[\"_ref\"]\r\n        if \"data\" not in response_fetch or \"_ref\" not in input_dict:\r\n            response_fetch[\"status\"] = \"failed\"\r\n            response_fetch[\"error\"] = \"failed due to reference id not found\"\r\n            return response_fetch\r\n        response = command_repo_connector.command_repo_connector(session_id, intent,\r\n                                                                 return_command,\r\n                                                                 {k: v for k, v in input_dict_main.items() if\r\n                                                                  v is not None})\r\n        AVX::LOG(\"Response from Command repo \" + str(response))\r\n\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            return response\r\n        else:\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\nif __name__ == '__main__':\r\n    AVX::LOG('Main - Started Task : Infoblox rest')\r\n    output = {}\r\n    input_dict_main = {}\r\n\r\n    try:\r\n        input_dict_main = input_dict\r\n        '''\r\n        Passing the user input to command repo\r\n        '''\r\n        AVX::LOG(str(input_dict_main))\r\n        if operation_type == \"create\":\r\n            final_response = create_a_record(configure_ip_for_create_intent)\r\n        elif operation_type == \"modify\":\r\n            final_response = modify_a_record(configure_ip_for_modify_intent)\r\n        else:\r\n            final_response = delete_a_record(configure_ip_for_delete_intent)\r\n\r\n        if \"status\" in final_response and final_response[\"status\"] ==\"success\":\r\n            final_response[\"status\"] = \"success\"\r\n            AVX::OUTPUT(final_response)\r\n        else:\r\n            final_response[\"status\"] = \"failed\"\r\n            AVX::OUTPUT(final_response, 2)\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        AVX::OUTPUT(response, 2)\r\n","http_method":"POST","action_id":"run-script"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"tags":[],"userName":null,"objectType":"TaskDetails","sourceControlSettings":null,"description":"","historyReferences":[],"usedHistory":null,"sampleInput":null,"sampleOutput":null,"contentTab":null,"successiveTasks":{"incoming":[{"taskId":"parallel_2","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"start","flowName":null,"linkType":null,"backwardLink":false}],"success":[{"taskId":"join_1","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"join","flowName":null,"linkType":null,"backwardLink":false}]},"flowPathID":null,"ignoredForStatusComputation":false,"flowName":"","subFlowID":"pYyR7rav","globalData":null,"input":[{"name":null,"key":"dns_name","value":"<%dns_name%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"dns_name","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"operation_type","value":"<%operation_type%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"operation_type","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"mail_exchanger","value":"<%mail_exchanger%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"mail_exchanger","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"dns_view","value":"<%dns_view%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"dns_view","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"sessionId","value":"<%sessionId%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"sessionId","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"device_name","value":"<%device_name%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"device_name","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"zone","value":"<%zone%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"zone","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"wapi","value":"<%wapi%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"wapi","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"preference","value":"<%preference%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"preference","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null}],"notificationMessage":{"0":"","1":"","2":""},"ancestor":null,"metaData":{"taskHeader":"MX record","hide":false,"lock":false,"successState":1,"failoverState":2,"taskScope":null,"hideFromStageView":false,"mode":"Developer","nature":"normal","lowCodeTask":false},"parentSubFlowID":"","helpContent":null,"name":"","syncExecution":true,"_id":null,"task_id":"script_7","task_name":"MX record","task_type":"script","task_category":"script","component_type":"others","setNullProperties":true,"folderName":null,"sub_group":"script","group_name":"General","viewable_type":"custom","scriptType":"Python","scriptContent":"sys.path.insert(0,AVX::HELPER)\r\nsys.path.insert(0,AVX::DEPENDENCIES)\r\n\r\nnull = None\r\nimport commandrepoconnectorv2 as command_repo_connector\r\nimport json\r\n\r\nreturn_command = False\r\n\r\n# Get User Input\r\ninput_dict = {}\r\ninput_dict[\"device_name\"] = \"<%device_name%>\"\r\ninput_dict[\"wapi\"] = \"<%wapi%>\"\r\n\r\ninput_dict[\"fqdn\"] = \"<%dns_name%>\"+\".<%zone%>\"\r\ninput_dict[\"mail_exchanger\"] = \"<%mail_exchanger%>\"\r\ninput_dict[\"preference\"] = \"<%preference%>\"\r\ninput_dict[\"dns_view\"] = \"<%dns_view%>\"\r\n\r\noperation_type = \"<%operation_type%>\"\r\n\r\n\r\nconfigure_ip_for_create_intent =  'create-mx-record'\r\nconfigure_ip_for_fetch_intent = 'get-mx-record'\r\nconfigure_ip_for_modify_intent = 'modify-mx-record'\r\nconfigure_ip_for_delete_intent = 'delete-mx-record'\r\nsession_id =\"<%sessionId%>\"\r\n\r\n\r\ndef create_a_record(intent):\r\n    try:\r\n        response = command_repo_connector.command_repo_connector(session_id,intent,return_command,{k:v for k,v in input_dict_main.items() if v is not None})\r\n        AVX::LOG(\"Response from create Command repo \" + str(response))\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            AVX::OUTPUT(response)\r\n        else :\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response ={}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\ndef modify_a_record(intent):\r\n    try:\r\n        response_fetch = command_repo_connector.command_repo_connector(session_id, configure_ip_for_fetch_intent,\r\n                                                                       return_command,\r\n                                                                       {k: v for k, v in input_dict_main.items() if\r\n                                                                        v is not None})\r\n        AVX::LOG(\"Response from modify Command repo \" + str(response_fetch))\r\n        if \"data\" in response_fetch:\r\n            for item in eval(response_fetch[\"data\"][0][\"response_entity\"]):\r\n                if \"_ref\" in item:\r\n                    input_dict[\"_ref\"] = item[\"_ref\"]\r\n        if \"data\" not in response_fetch or \"_ref\" not in input_dict:\r\n            response_fetch[\"status\"] = \"failed\"\r\n            response_fetch[\"error\"] = \"failed due to reference id not found\"\r\n            return response_fetch\r\n        response = command_repo_connector.command_repo_connector(session_id, intent,\r\n                                                                 return_command,\r\n                                                                 {k: v for k, v in input_dict_main.items() if\r\n                                                                  v is not None})\r\n        AVX::LOG(\"Response from Command repo \" + str(response))\r\n\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            return response\r\n        else:\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\ndef delete_a_record(intent):\r\n    try:\r\n        response_fetch = command_repo_connector.command_repo_connector(session_id, configure_ip_for_fetch_intent,\r\n                                                                       return_command,\r\n                                                                       {k: v for k, v in input_dict_main.items() if\r\n                                                                        v is not None})\r\n        AVX::LOG(\"Response from delete Command repo \" + str(response_fetch))\r\n        if \"data\" in response_fetch:\r\n            for item in eval(response_fetch[\"data\"][0][\"response_entity\"]):\r\n                if \"_ref\" in item:\r\n                    input_dict[\"_ref\"] = item[\"_ref\"]\r\n        if \"data\" not in response_fetch or \"_ref\" not in input_dict:\r\n            response_fetch[\"status\"] = \"failed\"\r\n            response_fetch[\"error\"] = \"failed due to reference id not found\"\r\n            return response_fetch\r\n        response = command_repo_connector.command_repo_connector(session_id, intent,\r\n                                                                 return_command,\r\n                                                                 {k: v for k, v in input_dict_main.items() if\r\n                                                                  v is not None})\r\n        AVX::LOG(\"Response from Command repo \" + str(response))\r\n\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            return response\r\n        else:\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\nif __name__ == '__main__':\r\n    AVX::LOG('Main - Started Task : Infoblox rest')\r\n    output = {}\r\n    input_dict_main = {}\r\n\r\n    try:\r\n        input_dict_main = input_dict\r\n        '''\r\n        Passing the user input to command repo\r\n        '''\r\n        AVX::LOG(str(input_dict_main))\r\n        if operation_type == \"create\":\r\n            final_response = create_a_record(configure_ip_for_create_intent)\r\n        elif operation_type == \"modify\":\r\n            final_response = modify_a_record(configure_ip_for_modify_intent)\r\n        else:\r\n            final_response = delete_a_record(configure_ip_for_delete_intent)\r\n\r\n        if \"status\" in final_response and final_response[\"status\"] ==\"success\":\r\n            final_response[\"status\"] = \"success\"\r\n            AVX::OUTPUT(final_response)\r\n        else:\r\n            final_response[\"status\"] = \"failed\"\r\n            AVX::OUTPUT(final_response, 2)\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        AVX::OUTPUT(response, 2)\r\n","http_method":"POST","action_id":"run-script"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"tags":[],"userName":null,"objectType":"TaskDetails","sourceControlSettings":null,"description":"","historyReferences":[],"usedHistory":null,"sampleInput":null,"sampleOutput":null,"contentTab":null,"successiveTasks":{"incoming":[{"taskId":"parallel_2","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"start","flowName":null,"linkType":null,"backwardLink":false}],"success":[{"taskId":"join_1","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"join","flowName":null,"linkType":null,"backwardLink":false}]},"flowPathID":null,"ignoredForStatusComputation":false,"flowName":"","subFlowID":"pYyR7rav","globalData":null,"input":[{"name":null,"key":"dns_name","value":"<%dns_name%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"dns_name","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"operation_type","value":"<%operation_type%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"operation_type","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"ip","value":"<%ip%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"ip","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"dns_view","value":"<%dns_view%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"dns_view","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"sessionId","value":"<%sessionId%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"sessionId","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"device_name","value":"<%device_name%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"device_name","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"zone","value":"<%zone%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"zone","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":null,"key":"wapi","value":"<%wapi%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"wapi","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null}],"notificationMessage":{"0":"","1":"","2":""},"ancestor":null,"metaData":{"taskHeader":"PTR record","hide":false,"lock":false,"successState":1,"failoverState":2,"taskScope":null,"hideFromStageView":false,"mode":"Developer","nature":"normal","lowCodeTask":false},"parentSubFlowID":"","helpContent":null,"name":"","syncExecution":true,"_id":null,"task_id":"script_8","task_name":"PTR record","task_type":"script","task_category":"script","component_type":"others","setNullProperties":true,"folderName":null,"sub_group":"script","group_name":"General","viewable_type":"custom","scriptType":"Python","scriptContent":"sys.path.insert(0,AVX::HELPER)\r\nsys.path.insert(0,AVX::DEPENDENCIES)\r\n\r\nnull = None\r\nimport commandrepoconnectorv2 as command_repo_connector\r\nimport json\r\n\r\nreturn_command = False\r\n\r\n# Get User Input\r\ninput_dict = {}\r\ninput_dict[\"device_name\"] = \"<%device_name%>\"\r\ninput_dict[\"wapi\"] = \"<%wapi%>\"\r\n\r\ninput_dict[\"ipv4addr\"] = \"<%ip%>\"\r\ninput_dict[\"fqdn\"] = \"<%dns_name%>\"+\".<%zone%>\"\r\ninput_dict[\"view\"] = \"<%dns_view%>\"\r\n\r\noperation_type = \"<%operation_type%>\"\r\n\r\n\r\nconfigure_ip_for_create_intent =  'create-ptr-record'\r\nconfigure_ip_for_fetch_intent = 'get-ptr-record'\r\nconfigure_ip_for_modify_intent = 'modify-ptr-record'\r\nconfigure_ip_for_delete_intent = 'delete-ptr-record'\r\nsession_id =\"<%sessionId%>\"\r\n\r\n\r\ndef create_a_record(intent):\r\n    try:\r\n        response = command_repo_connector.command_repo_connector(session_id,intent,return_command,{k:v for k,v in input_dict_main.items() if v is not None})\r\n        AVX::LOG(\"Response from create Command repo \" + str(response))\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            AVX::OUTPUT(response)\r\n        else :\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response ={}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\ndef modify_a_record(intent):\r\n    try:\r\n        response_fetch = command_repo_connector.command_repo_connector(session_id, configure_ip_for_fetch_intent,\r\n                                                                       return_command,\r\n                                                                       {k: v for k, v in input_dict_main.items() if\r\n                                                                        v is not None})\r\n        AVX::LOG(\"Response from modify Command repo \" + str(response_fetch))\r\n        if \"data\" in response_fetch:\r\n            for item in eval(response_fetch[\"data\"][0][\"response_entity\"]):\r\n                if \"_ref\" in item:\r\n                    input_dict[\"_ref\"] = item[\"_ref\"]\r\n        if \"data\" not in response_fetch or \"_ref\" not in input_dict:\r\n            response_fetch[\"status\"] = \"failed\"\r\n            response_fetch[\"error\"] = \"failed due to reference id not found\"\r\n            return response_fetch\r\n        response = command_repo_connector.command_repo_connector(session_id, intent,\r\n                                                                 return_command,\r\n                                                                 {k: v for k, v in input_dict_main.items() if\r\n                                                                  v is not None})\r\n        AVX::LOG(\"Response from Command repo \" + str(response))\r\n\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            return response\r\n        else:\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\ndef delete_a_record(intent):\r\n    try:\r\n        response_fetch = command_repo_connector.command_repo_connector(session_id, configure_ip_for_fetch_intent,\r\n                                                                       return_command,\r\n                                                                       {k: v for k, v in input_dict_main.items() if\r\n                                                                        v is not None})\r\n        AVX::LOG(\"Response from delete Command repo \" + str(response_fetch))\r\n        if \"data\" in response_fetch:\r\n            for item in eval(response_fetch[\"data\"][0][\"response_entity\"]):\r\n                if \"_ref\" in item:\r\n                    input_dict[\"_ref\"] = item[\"_ref\"]\r\n        if \"data\" not in response_fetch or \"_ref\" not in input_dict:\r\n            response_fetch[\"status\"] = \"failed\"\r\n            response_fetch[\"error\"] = \"failed due to reference id not found\"\r\n            return response_fetch\r\n        response = command_repo_connector.command_repo_connector(session_id, intent,\r\n                                                                 return_command,\r\n                                                                 {k: v for k, v in input_dict_main.items() if\r\n                                                                  v is not None})\r\n        AVX::LOG(\"Response from Command repo \" + str(response))\r\n\r\n        if \"data\" in response:\r\n            response[\"status\"] = \"success\"\r\n            return response\r\n        else:\r\n            response[\"status\"] = \"failed\"\r\n            return response\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        return response\r\n\r\n\r\nif __name__ == '__main__':\r\n    AVX::LOG('Main - Started Task : Infoblox rest')\r\n    output = {}\r\n    input_dict_main = {}\r\n\r\n    try:\r\n        input_dict_main = input_dict\r\n        '''\r\n        Passing the user input to command repo\r\n        '''\r\n        AVX::LOG(str(input_dict_main))\r\n        if operation_type == \"create\":\r\n            final_response = create_a_record(configure_ip_for_create_intent)\r\n        elif operation_type == \"modify\":\r\n            final_response = modify_a_record(configure_ip_for_modify_intent)\r\n        else:\r\n            final_response = delete_a_record(configure_ip_for_delete_intent)\r\n\r\n        if \"status\" in final_response and final_response[\"status\"] ==\"success\":\r\n            final_response[\"status\"] = \"success\"\r\n            AVX::OUTPUT(final_response)\r\n        else:\r\n            final_response[\"status\"] = \"failed\"\r\n            AVX::OUTPUT(final_response, 2)\r\n    except Exception as e:\r\n        response = {}\r\n        AVX::LOG(\"Exception Raised \" + str(e))\r\n        response[\"status\"] = \"failed\"\r\n        response[\"error\"] = str(e)\r\n        AVX::OUTPUT(response, 2)\r\n","http_method":"POST","action_id":"run-script"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"tags":[],"userName":null,"objectType":"TaskDetails","sourceControlSettings":null,"description":null,"historyReferences":[],"usedHistory":null,"sampleInput":null,"sampleOutput":null,"contentTab":null,"successiveTasks":{"incoming":[{"taskId":"createform_1","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"start","flowName":null,"linkType":null,"backwardLink":false}],"create_mx":[{"taskId":"script_5","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"script","flowName":null,"linkType":null,"backwardLink":false},{"taskId":"script_6","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"script","flowName":null,"linkType":null,"backwardLink":false},{"taskId":"script_7","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"script","flowName":null,"linkType":null,"backwardLink":false},{"taskId":"script_8","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"script","flowName":null,"linkType":null,"backwardLink":false},{"taskId":"script_3","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"script","flowName":null,"linkType":null,"backwardLink":false},{"taskId":"script_4","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"script","flowName":null,"linkType":null,"backwardLink":false}],"create_cname":[{"taskId":"script_6","taskName":null,"subflowId":"bjz4t905","parentSubflowId":"pyfonGbS","taskType":"script","flowName":null,"linkType":null,"backwardLink":false}],"create_a":[{"taskId":"script_3","taskName":null,"subflowId":"bjz4t905","parentSubflowId":"pyfonGbS","taskType":"script","flowName":null,"linkType":null,"backwardLink":false}],"create_txt":[{"taskId":"script_4","taskName":null,"subflowId":"bjz4t905","parentSubflowId":"pyfonGbS","taskType":"script","flowName":null,"linkType":null,"backwardLink":false}],"create_aaaa":[{"taskId":"script_5","taskName":null,"subflowId":"bjz4t905","parentSubflowId":"pyfonGbS","taskType":"script","flowName":null,"linkType":null,"backwardLink":false}],"create_ptr":[{"taskId":"script_8","taskName":null,"subflowId":"bjz4t905","parentSubflowId":"pyfonGbS","taskType":"script","flowName":null,"linkType":null,"backwardLink":false}]},"flowPathID":null,"ignoredForStatusComputation":false,"flowName":"","subFlowID":"pYyR7rav","globalData":null,"input":[{"name":null,"key":"record_type","value":"<%record_type%>","description":null,"dataType":"Json","size":0,"variableType":"global","defaultValues":null,"mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"record_type","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null}],"notificationMessage":null,"ancestor":null,"metaData":{"taskHeader":"Switch","hide":false,"lock":false,"successState":1,"failoverState":2,"taskScope":null,"hideFromStageView":false,"mode":"Developer","nature":"normal","lowCodeTask":false},"parentSubFlowID":"","helpContent":null,"rules":{"create_mx":{"not":false,"condition":"AND","rules":[{"operator":"==","value":"<%record_type%>","comparedValue":"MX"}]},"create_cname":{"not":false,"condition":"AND","rules":[{"operator":"==","value":"<%record_type%>","comparedValue":"CNAME"}]},"create_a":{"not":false,"condition":"AND","rules":[{"operator":"==","value":"<%record_type%>","comparedValue":"A"}]},"create_txt":{"not":false,"condition":"AND","rules":[{"operator":"==","value":"<%record_type%>","comparedValue":"TXT"}]},"create_aaaa":{"not":false,"condition":"AND","rules":[{"operator":"==","value":"<%record_type%>","comparedValue":"AAAA"}]},"create_ptr":{"not":false,"condition":"AND","rules":[{"operator":"==","value":"<%record_type%>","comparedValue":"PTR"}]}},"_id":null,"task_id":"parallel_2","task_name":"Switch","task_type":"parallel","task_category":"parallel","component_type":"others","setNullProperties":true,"folderName":"testfolder","sub_group":"parallel","group_name":"General","viewable_type":"custom"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"tags":[],"userName":null,"objectType":"TaskDetails","sourceControlSettings":null,"description":null,"historyReferences":[],"usedHistory":null,"sampleInput":null,"sampleOutput":null,"contentTab":null,"successiveTasks":{"incoming":[{"taskId":"script_5","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"start","flowName":null,"linkType":null,"backwardLink":false},{"taskId":"script_6","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"start","flowName":null,"linkType":null,"backwardLink":false},{"taskId":"script_7","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"start","flowName":null,"linkType":null,"backwardLink":false},{"taskId":"script_8","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"start","flowName":null,"linkType":null,"backwardLink":false},{"taskId":"script_3","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"start","flowName":null,"linkType":null,"backwardLink":false},{"taskId":"script_4","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"start","flowName":null,"linkType":null,"backwardLink":false}],"success":[{"taskId":"workflow_stop_1","taskName":null,"subflowId":"pYyR7rav","parentSubflowId":"","taskType":"stop","flowName":null,"linkType":null,"backwardLink":false}]},"flowPathID":null,"ignoredForStatusComputation":false,"flowName":null,"subFlowID":null,"globalData":null,"input":[],"notificationMessage":null,"ancestor":null,"metaData":{"taskHeader":"Join","hide":false,"lock":false,"successState":1,"failoverState":2,"taskScope":null,"hideFromStageView":false,"mode":"Developer","nature":"normal","lowCodeTask":false},"parentSubFlowID":null,"helpContent":null,"flowIdsToJoin":[],"_id":null,"task_id":"join_1","task_name":"Join","task_type":"join","task_category":"join","component_type":"others","setNullProperties":true,"folderName":null,"sub_group":"join","group_name":"General","viewable_type":"default"}],"subFlowID":"bjz4t905","taskGlobalData":{"script_6":[],"script_8":[],"script_4":[],"script_5":[],"createform_1":[{"name":"Enter DNS Name","key":"dns_name","value":"dns_name","description":null,"dataType":"string","size":0,"variableType":"global","defaultValues":"<%wideip_name%>","mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"dns_name","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":"Mail Exchanger Name","key":"mail_exchanger","value":"mail_exchanger","description":null,"dataType":"string","size":0,"variableType":"global","defaultValues":"","mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"mail_exchanger","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":"Text Record","key":"text_record","value":"text_record","description":null,"dataType":"string","size":0,"variableType":"global","defaultValues":"","mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"text_record","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":"Canonical Name","key":"canonical","value":"canonical","description":null,"dataType":"string","size":0,"variableType":"global","defaultValues":"","mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"canonical","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":"TTL","key":"ttl","value":"ttl","description":null,"dataType":"string","size":0,"variableType":"global","defaultValues":"","mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"ttl","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":"Select Device","key":"device_name","value":"device_name","description":null,"dataType":"string","size":0,"variableType":"global","defaultValues":"","mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"device_name","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":"Select Zone","key":"zone","value":"zone","description":null,"dataType":"string","size":0,"variableType":"global","defaultValues":"","mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"zone","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":"Record Type","key":"record_type","value":"record_type","description":null,"dataType":"string","size":0,"variableType":"global","defaultValues":"Select,A,PTR,AAAA,CNAME,MX,TXT","mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"record_type","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":"operation type","key":"operation_type","value":"operation_type","description":null,"dataType":"string","size":0,"variableType":"global","defaultValues":"modify","mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"operation_type","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":"IP Address","key":"ip","value":"ip","description":null,"dataType":"string","size":0,"variableType":"global","defaultValues":"","mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"ip","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":"Subnet","key":"subnet","value":"subnet","description":null,"dataType":"string","size":0,"variableType":"global","defaultValues":"","mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"subnet","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":"Select DNS View","key":"dns_view","value":"dns_view","description":null,"dataType":"string","size":0,"variableType":"global","defaultValues":"","mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"dns_view","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":"Mail Destination","key":"mail_destination","value":"mail_destination","description":null,"dataType":"string","size":0,"variableType":"global","defaultValues":"","mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"mail_destination","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":"IP Version","key":"ip_version","value":"ip_version","description":null,"dataType":"string","size":0,"variableType":"global","defaultValues":"Enter IP,Get Available IP","mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"ip_version","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":"Preference","key":"preference","value":"preference","description":null,"dataType":"string","size":0,"variableType":"global","defaultValues":"","mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"preference","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null},{"name":"wapi","key":"wapi","value":"wapi","description":null,"dataType":"string","size":0,"variableType":"global","defaultValues":"2.2.2","mandatory":false,"showToolTip":false,"useDefaultValue":false,"variableDeclared":false,"variableUsed":false,"sourceTasks":null,"destinationTasks":null,"enableForIOVariables":true,"order":0,"label":"wapi","dataValidation":null,"notification":null,"elementType":null,"type":"Custom","_id":null}],"script_7":[],"script_3":[],"join_1":[],"parallel_2":[],"workflow_stop_1":[]},"type":null,"level":1,"maxDepth":0,"input":null,"workflowName":"Modify Wide IP on BIG-IP with Infoblox and ServiceNOW","description":null,"flowName":"Manage DNS records with create-modify-delete","workflowType":"Default","subFlowType":"Flow","parentSubFlowID":null,"logs":[],"workflowVersion":"master"},"workflowTaskComponentDetail":{"workflowName":"Modify Wide IP on BIG-IP with Infoblox and ServiceNOW","connectorType":"Flowchart","subFlowID":"bjz4t905","permission":null,"alignmentType":"horizontal","tags":null,"properties":null,"bulkUpdate":false,"sourceControlSettings":null,"_id":"5f3d98fce2f5acf6f9646c1e","state":null,"templateType":null,"description":null,"workflowType":"Default","subFlowType":"Flow","flowName":"Manage DNS records with create-modify-delete","parentSubFlowID":"7njwvbJS","components":[{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"subFlowID":null,"metaData":{"taskHeader":null,"hide":false,"lock":false,"nature":null,"hideFromStageView":false,"mode":"Developer","lowCodeTask":false},"generalComponent":true,"type":"General","subGroup":"start","taskCategory":"start","groupName":"Default","viewable_type":"custom","taskName":"Start_Flow","taskType":"start","taskId":"workflow_start_1","representationDetails":{"co-ordinates":"25192,24928"},"taskPoolId":null,"referenceTaskId":null,"favouriteType":null,"folderName":null,"subCategory":null,"parentSubFlowID":null,"workflowName":null,"workflowType":null,"folderId":null,"folderType":null},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"subFlowID":null,"metaData":{"taskHeader":null,"hide":false,"lock":false,"nature":null,"hideFromStageView":false,"mode":"Developer","lowCodeTask":false},"generalComponent":true,"type":"General","subGroup":"stop","taskCategory":"stop","groupName":"Default","viewable_type":"custom","taskName":"Stop_Flow","taskType":"stop","taskId":"workflow_stop_1","representationDetails":{"co-ordinates":"25032,25692"},"taskPoolId":null,"referenceTaskId":null,"favouriteType":null,"folderName":null,"subCategory":null,"parentSubFlowID":null,"workflowName":null,"workflowType":null,"folderId":null,"folderType":null},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"subFlowID":null,"metaData":{"taskHeader":null,"hide":false,"lock":false,"nature":null,"hideFromStageView":false,"mode":"Developer","lowCodeTask":false},"generalComponent":true,"type":"General","subGroup":"form","taskCategory":"form","groupName":"User interface","viewable_type":"custom","taskName":"Infoblox - Input DNS details","taskType":"form","taskId":"createform_1","representationDetails":{"co-ordinates":"25192,25080"},"taskPoolId":"createform","referenceTaskId":"createform_1#4ZnFQuLk","favouriteType":"bookmark","folderName":"testfolder","subCategory":null,"parentSubFlowID":null,"workflowName":null,"workflowType":null,"folderId":"WmUt0qII","folderType":"global"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"generalComponent":false,"type":"Link","subGroup":null,"linkName":"success","metaData":{"linkName":"success","sourceComponent":"workflow_start_1","destinationComponent":"createform_1","action":"createform_1","ruleName":"success"},"linkId":"Link_1"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"subFlowID":null,"metaData":{"taskHeader":null,"hide":false,"lock":false,"nature":null,"hideFromStageView":false,"mode":"Developer","lowCodeTask":false},"generalComponent":true,"type":"General","subGroup":"script","taskCategory":"script","groupName":"General","viewable_type":"custom","taskName":"A record","taskType":"script","taskId":"script_3","representationDetails":{"co-ordinates":"25407,25381"},"taskPoolId":"script","referenceTaskId":"","favouriteType":"","folderName":"","subCategory":null,"parentSubFlowID":null,"workflowName":null,"workflowType":null,"folderId":"","folderType":""},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"subFlowID":null,"metaData":{"taskHeader":null,"hide":false,"lock":false,"nature":null,"hideFromStageView":false,"mode":"Developer","lowCodeTask":false},"generalComponent":true,"type":"General","subGroup":"script","taskCategory":"script","groupName":"General","viewable_type":"custom","taskName":"TXT record","taskType":"script","taskId":"script_4","representationDetails":{"co-ordinates":"25314,25386"},"taskPoolId":"script","referenceTaskId":"","favouriteType":"","folderName":"","subCategory":null,"parentSubFlowID":null,"workflowName":null,"workflowType":null,"folderId":"","folderType":""},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"subFlowID":null,"metaData":{"taskHeader":null,"hide":false,"lock":false,"nature":null,"hideFromStageView":false,"mode":"Developer","lowCodeTask":false},"generalComponent":true,"type":"General","subGroup":"script","taskCategory":"script","groupName":"General","viewable_type":"custom","taskName":"AAAA record","taskType":"script","taskId":"script_5","representationDetails":{"co-ordinates":"25033,25384"},"taskPoolId":"script","referenceTaskId":"","favouriteType":"","folderName":"","subCategory":null,"parentSubFlowID":null,"workflowName":null,"workflowType":null,"folderId":"","folderType":""},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"subFlowID":null,"metaData":{"taskHeader":null,"hide":false,"lock":false,"nature":null,"hideFromStageView":false,"mode":"Developer","lowCodeTask":false},"generalComponent":true,"type":"General","subGroup":"script","taskCategory":"script","groupName":"General","viewable_type":"custom","taskName":"CNAME record","taskType":"script","taskId":"script_6","representationDetails":{"co-ordinates":"25128,25381"},"taskPoolId":"script","referenceTaskId":"","favouriteType":"","folderName":"","subCategory":null,"parentSubFlowID":null,"workflowName":null,"workflowType":null,"folderId":"","folderType":""},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"subFlowID":null,"metaData":{"taskHeader":null,"hide":false,"lock":false,"nature":null,"hideFromStageView":false,"mode":"Developer","lowCodeTask":false},"generalComponent":true,"type":"General","subGroup":"script","taskCategory":"script","groupName":"General","viewable_type":"custom","taskName":"MX record","taskType":"script","taskId":"script_7","representationDetails":{"co-ordinates":"24939,25386"},"taskPoolId":"script","referenceTaskId":"","favouriteType":"","folderName":"","subCategory":null,"parentSubFlowID":null,"workflowName":null,"workflowType":null,"folderId":"","folderType":""},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"subFlowID":null,"metaData":{"taskHeader":null,"hide":false,"lock":false,"nature":null,"hideFromStageView":false,"mode":"Developer","lowCodeTask":false},"generalComponent":true,"type":"General","subGroup":"script","taskCategory":"script","groupName":"General","viewable_type":"custom","taskName":"PTR record","taskType":"script","taskId":"script_8","representationDetails":{"co-ordinates":"25224,25386"},"taskPoolId":"script","referenceTaskId":"","favouriteType":"","folderName":"","subCategory":null,"parentSubFlowID":null,"workflowName":null,"workflowType":null,"folderId":"","folderType":""},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"subFlowID":null,"metaData":{"taskHeader":null,"hide":false,"lock":false,"nature":null,"hideFromStageView":false,"mode":"Developer","lowCodeTask":false},"generalComponent":true,"type":"General","subGroup":"parallel","taskCategory":"parallel","groupName":"General","viewable_type":"custom","taskName":"Switch","taskType":"parallel","taskId":"parallel_2","representationDetails":{"co-ordinates":"25192,25233"},"taskPoolId":"parallel","referenceTaskId":"parallel_1#4ZnFQuLk","favouriteType":"bookmark","folderName":"testfolder","subCategory":null,"parentSubFlowID":null,"workflowName":null,"workflowType":null,"folderId":"WmUt0qII","folderType":"global"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"generalComponent":false,"type":"Link","subGroup":null,"linkName":"success","metaData":{"linkName":"success","sourceComponent":"createform_1","destinationComponent":"parallel_2","action":"parallel_2","ruleName":"success"},"linkId":"Link_11"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"generalComponent":false,"type":"Link","subGroup":null,"linkName":"create_txt","metaData":{"linkName":"create_txt","sourceComponent":"parallel_2","destinationComponent":"script_4","action":"script_4","ruleName":"create_txt"},"linkId":"Link_12"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"generalComponent":false,"type":"Link","subGroup":null,"linkName":"create_aaaa","metaData":{"linkName":"create_aaaa","sourceComponent":"parallel_2","destinationComponent":"script_5","action":"script_5","ruleName":"create_aaaa"},"linkId":"Link_13"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"generalComponent":false,"type":"Link","subGroup":null,"linkName":"create_cname","metaData":{"linkName":"create_cname","sourceComponent":"parallel_2","destinationComponent":"script_6","action":"script_6","ruleName":"create_cname"},"linkId":"Link_14"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"generalComponent":false,"type":"Link","subGroup":null,"linkName":"create_mx","metaData":{"linkName":"create_mx","sourceComponent":"parallel_2","destinationComponent":"script_7","action":"script_7","ruleName":"create_mx"},"linkId":"Link_15"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"generalComponent":false,"type":"Link","subGroup":null,"linkName":"create_ptr","metaData":{"linkName":"create_ptr","sourceComponent":"parallel_2","destinationComponent":"script_8","action":"script_8","ruleName":"create_ptr"},"linkId":"Link_16"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"generalComponent":false,"type":"Link","subGroup":null,"linkName":"create_a","metaData":{"linkName":"create_a","sourceComponent":"parallel_2","destinationComponent":"script_3","action":"script_3","ruleName":"create_a"},"linkId":"Link_17"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"subFlowID":null,"metaData":{"taskHeader":null,"hide":false,"lock":false,"nature":null,"hideFromStageView":false,"mode":"Developer","lowCodeTask":false},"generalComponent":true,"type":"General","subGroup":"join","taskCategory":"join","groupName":"General","viewable_type":"custom","taskName":"Join","taskType":"join","taskId":"join_1","representationDetails":{"co-ordinates":"25032,25539"},"taskPoolId":"join","referenceTaskId":"","favouriteType":"","folderName":"","subCategory":null,"parentSubFlowID":null,"workflowName":null,"workflowType":null,"folderId":"","folderType":""},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"generalComponent":false,"type":"Link","subGroup":null,"linkName":"success","metaData":{"linkName":"success","sourceComponent":"script_3","destinationComponent":"join_1","action":"join_1","ruleName":"success"},"linkId":"Link_18"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"generalComponent":false,"type":"Link","subGroup":null,"linkName":"success","metaData":{"linkName":"success","sourceComponent":"join_1","destinationComponent":"workflow_stop_1","action":"workflow_stop_1","ruleName":"success"},"linkId":"Link_19"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"generalComponent":false,"type":"Link","subGroup":null,"linkName":"success","metaData":{"linkName":"success","sourceComponent":"script_4","destinationComponent":"join_1","action":"join_1","ruleName":"success"},"linkId":"Link_20"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"generalComponent":false,"type":"Link","subGroup":null,"linkName":"success","metaData":{"linkName":"success","sourceComponent":"script_5","destinationComponent":"join_1","action":"join_1","ruleName":"success"},"linkId":"Link_21"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"generalComponent":false,"type":"Link","subGroup":null,"linkName":"success","metaData":{"linkName":"success","sourceComponent":"script_6","destinationComponent":"join_1","action":"join_1","ruleName":"success"},"linkId":"Link_22"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"generalComponent":false,"type":"Link","subGroup":null,"linkName":"success","metaData":{"linkName":"success","sourceComponent":"script_7","destinationComponent":"join_1","action":"join_1","ruleName":"success"},"linkId":"Link_23"},{"uniqueId":null,"directoryUniqueId":null,"source":null,"objectType":null,"generalComponent":false,"type":"Link","subGroup":null,"linkName":"success","metaData":{"linkName":"success","sourceComponent":"script_8","destinationComponent":"join_1","action":"join_1","ruleName":"success"},"linkId":"Link_24"}],"flows":null,"workflowVersion":"master"},"_id":null,"task_id":"ManageDNSrecordswithcreate-modify-delete_1","task_name":"Manage DNS records with create-modify-delete","task_type":"flow","task_category":"flow","component_type":"others","setNullProperties":true,"folderName":"testfolder","sub_group":"flow","group_name":null,"viewable_type":"custom"}